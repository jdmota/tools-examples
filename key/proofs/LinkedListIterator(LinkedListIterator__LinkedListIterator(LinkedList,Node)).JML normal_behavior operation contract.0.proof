\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jun 14 12:45:22 BST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=1000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "..";

\proofObligation "#Proof Obligation Settings
#Tue Jun 14 12:45:22 BST 2022
contract=LinkedListIterator[LinkedListIterator\\:\\:LinkedListIterator(LinkedList,Node)].JML normal_behavior operation contract.0
name=LinkedListIterator[LinkedListIterator\\:\\:LinkedListIterator(LinkedList,Node)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))

(autoModeTime "93889")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "self_25"))
(rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=l"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "l_1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "9"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "9") (term "1") (inst "#v0=l_2"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "l_2"))
(rule "allocateInstance" (formula "9"))
 (builtin "One Step Simplification" (formula "10"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "12") (term "1"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "12"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodCallWithinClass" (formula "12") (term "1"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodCallSuper" (formula "12") (term "1"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodCallEmpty" (formula "12") (term "1"))
(rule "blockEmpty" (formula "12") (term "1"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodCallEmpty" (formula "12") (term "1"))
(rule "blockEmpty" (formula "12") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "12") (term "1"))
(rule "methodCallReturn" (formula "12") (term "1"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodCallEmpty" (formula "12") (term "1"))
(rule "blockEmpty" (formula "12") (term "1"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "blockEmpty" (formula "12") (term "1"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "var"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "var_1"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodCallSuper" (formula "12") (term "1"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "methodCallEmpty" (formula "12") (term "1"))
(rule "blockEmpty" (formula "12") (term "1"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "emptyStatement" (formula "12") (term "1"))
(rule "assignment_write_attribute_this" (formula "12"))
 (builtin "One Step Simplification" (formula "12"))
(rule "emptyStatement" (formula "12") (term "1"))
(rule "eval_order_access4" (formula "12") (term "1") (inst "#v1=x") (inst "#v0=l"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "l_3"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
(rule "assignment_read_attribute" (formula "12"))
(branch "Normal Execution (var != null)"
    (builtin "One Step Simplification" (formula "12"))
   (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
   (rule "pullOutSelect" (formula "12") (term "0,1,0") (inst "selectSK=LinkedList_values_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "12") (term "0,1,0"))
   (rule "assignment_write_attribute" (formula "12"))
   (branch "Normal Execution (l_3 != null)"
       (builtin "One Step Simplification" (formula "12"))
      (rule "emptyStatement" (formula "12") (term "1"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "blockEmpty" (formula "12") (term "1"))
      (rule "assignment_write_attribute" (formula "12"))
      (branch "Normal Execution (self_25 != null)"
          (builtin "One Step Simplification" (formula "12"))
         (rule "tryEmpty" (formula "12") (term "1"))
         (rule "emptyModality" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "andRight" (formula "12"))
         (branch "Case 1"
            (rule "andRight" (formula "12"))
            (branch "Case 1"
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                  (rule "andRight" (formula "12"))
                  (branch "Case 1"
                     (rule "andRight" (formula "12"))
                     (branch "Case 1"
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                        (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=LinkedListIterator_list_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "closeTrue" (formula "12"))
                     )
                     (branch "Case 2"
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "11") (inst "iv=iv"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                        (rule "pullOutSelect" (formula "11") (term "0,0,0") (inst "selectSK=LinkedListIterator_seen_0"))
                        (rule "applyEq" (formula "12") (term "0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "12") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "lenOfSeqEmptyEQ" (formula "12") (term "0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "lenOfSeqEmptyEQ" (formula "12") (term "1,1,1,0,0") (ifseqformula "1"))
                        (rule "add_zero_right" (formula "12") (term "1,1,0,0"))
                        (rule "allRight" (formula "12") (inst "sk=iv_0"))
                        (rule "impRight" (formula "12"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "closeTrue" (formula "14"))
                     )
                  )
                  (branch "Case 2"
                     (rule "dismissNonSelectedField" (formula "12") (term "1"))
                     (rule "dismissNonSelectedField" (formula "12") (term "0"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1"))
                     (rule "replaceKnownSelect_taclet0_0" (formula "12") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "12") (term "1"))
                     (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                     (rule "equalityToSeqGetAndSeqLenRight" (formula "11") (inst "iv=iv"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "pullOutSelect" (formula "11") (term "0,0,1,0,1") (inst "selectSK=LinkedListIterator_to_see_0"))
                     (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "12") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "12") (term "0,0,1,0,1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "closeTrue" (formula "12"))
                  )
               )
               (branch "Case 2"
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                  (rule "cut_direct" (formula "4") (term "0"))
                  (branch "CUT: head = null TRUE"
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "11") (term "3,0,0,0,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                      (builtin "Use Dependency Contract" (formula "11") (ifInst ""  (formula "7")) (contract "LinkedList[java.lang.Object::<inv>()].JML accessible clause.0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "replace_known_right" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "12")) (ifInst ""  (formula "7")))
                     (rule "notLeft" (formula "8"))
                     (rule "disjointDefinition" (formula "8") (term "1"))
                     (rule "wellFormedStoreObject" (formula "8") (term "0"))
                     (rule "typeEqDerived2" (formula "8") (term "0,1,1,1,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "wellFormedStoreObject" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "11")))
                     (rule "wellFormedCreate" (formula "8") (term "0,0"))
                     (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "distributeIntersection_2" (formula "8") (term "0,1"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1"))
                     (rule "disjointWithSingleton2" (formula "8") (term "0,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "0,1,1"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1"))
                     (rule "disjointWithSingleton2" (formula "8") (term "0,1,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "0,1,1,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,0,1,1,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "1,0,1,1,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,1,0,1,1,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "1,1,0,1,1,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,1,1,0,1,1,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "1,1,1,0,1,1,1"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1,1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1,1,1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1,1,1,1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "pullOutSelect" (formula "8") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                     (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "shift_paren_and" (formula "8") (term "1,1,1"))
                     (rule "commute_and" (formula "8") (term "1,1"))
                     (rule "commute_and" (formula "8") (term "1"))
                     (rule "commute_and" (formula "8"))
                     (rule "commute_and" (formula "8") (term "0,0,0,0"))
                     (rule "cut_direct" (formula "8") (term "0,1"))
                     (branch "CUT: (l_2, java.lang.Object::<initialized>) in l.footprint TRUE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "false_right" (formula "9"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: (l_2, java.lang.Object::<initialized>) in l.footprint FALSE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "cut_direct" (formula "9") (term "0,1"))
                        (branch "CUT: (l_2, LinkedListIterator::$to_see) in l.footprint TRUE"
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "false_right" (formula "10"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: (l_2, LinkedListIterator::$to_see) in l.footprint FALSE"
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "cut_direct" (formula "10") (term "0,0,0,0"))
                           (branch "CUT: (l_2, LinkedListIterator::$curr) in l.footprint TRUE"
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "false_right" (formula "11"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: (l_2, LinkedListIterator::$curr) in l.footprint FALSE"
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "cut_direct" (formula "11") (term "0,1,0"))
                              (branch "CUT: (l_2, LinkedListIterator::$list) in l.footprint TRUE"
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "false_right" (formula "12"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "CUT: (l_2, LinkedListIterator::$list) in l.footprint FALSE"
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "cut_direct" (formula "12") (term "0,0"))
                                 (branch "CUT: (l_2, LinkedListIterator::$index) in l.footprint TRUE"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "false_right" (formula "13"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: (l_2, LinkedListIterator::$index) in l.footprint FALSE"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "notRight" (formula "13"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: head = null FALSE"
                      (builtin "One Step Simplification" (formula "4"))
                      (builtin "Use Dependency Contract" (formula "12") (ifInst ""  (formula "7")) (contract "LinkedList[java.lang.Object::<inv>()].JML accessible clause.0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "wellFormedStorePrimitive" (formula "8") (term "1,1,0,0,0"))
                     (rule "replace_known_right" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "13")) (ifInst ""  (formula "7")))
                     (rule "notLeft" (formula "8"))
                     (rule "disjointDefinition" (formula "8") (term "1"))
                     (rule "wellFormedStoreObject" (formula "8") (term "0"))
                     (rule "typeEqDerived2" (formula "8") (term "0,1,1,1,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "9")))
                     (rule "dismissNonSelectedField" (formula "8") (term "0,1,0"))
                     (rule "wellFormedStoreObject" (formula "8") (term "0,0"))
                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "12")))
                     (rule "wellFormedCreate" (formula "8") (term "0,0,0"))
                     (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "distributeIntersection_2" (formula "8") (term "0,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,0,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "1,0,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,1,0,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "1,1,0,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,1,1,0,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "1,1,1,0,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,1,1,1,0,1"))
                     (rule "distributeIntersection_2" (formula "8") (term "1,1,1,1,0,1"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "intersectWithSingleton" (formula "8") (term "1,1,1,1,0,1,1"))
                     (rule "intersectWithSingleton" (formula "8") (term "0,1,1,1,0,1,1"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1,1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1,1,1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "unionEqualsEmpty" (formula "8") (term "1,1,1,1,1"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "pullOutSelect" (formula "8") (term "0,1,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                     (rule "applyEqReverse" (formula "9") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "pullOutSelect" (formula "8") (term "0,0") (inst "selectSK=java_lang_Object_created__1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "3"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "shift_paren_and" (formula "8") (term "1,1,1"))
                     (rule "commute_and" (formula "8") (term "1,1"))
                     (rule "commute_and" (formula "8") (term "1"))
                     (rule "commute_and" (formula "8"))
                     (rule "commute_and" (formula "8") (term "0,0,0,0"))
                     (rule "cut_direct" (formula "8") (term "0,1,0,0,0"))
                     (branch "CUT: (l_2, LinkedListIterator::$list) in l.footprint TRUE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "false_right" (formula "9"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: (l_2, LinkedListIterator::$list) in l.footprint FALSE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "cut_direct" (formula "9") (term "0,0,0,0,0"))
                        (branch "CUT: (l_2, LinkedListIterator::$curr) in l.footprint TRUE"
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "false_right" (formula "10"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: (l_2, LinkedListIterator::$curr) in l.footprint FALSE"
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "cut_direct" (formula "10") (term "0,1"))
                           (branch "CUT: (l_2, java.lang.Object::<initialized>) in l.footprint TRUE"
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "false_right" (formula "11"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: (l_2, java.lang.Object::<initialized>) in l.footprint FALSE"
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "cut_direct" (formula "11") (term "0,1"))
                              (branch "CUT: (l_2, LinkedListIterator::$to_see) in l.footprint TRUE"
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "false_right" (formula "12"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "CUT: (l_2, LinkedListIterator::$to_see) in l.footprint FALSE"
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "cut_direct" (formula "12") (term "0,0"))
                                 (branch "CUT: (l_2, LinkedListIterator::$index) in l.footprint TRUE"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "false_right" (formula "13"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: (l_2, LinkedListIterator::$index) in l.footprint FALSE"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "notRight" (formula "13"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                  (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "12") (term "0") (userinteraction))
                  (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                  (rule "subsetUnionLeft" (formula "11"))
                  (rule "subsetSingletonLeft" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
                  (rule "subsetUnionLeft" (formula "11"))
                  (rule "subsetSingletonLeft" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
                  (rule "subsetUnionLeft" (formula "11"))
                  (rule "subsetSingletonLeft" (formula "11") (term "1"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
                  (rule "subsetUnionLeft" (formula "11"))
                  (rule "subsetSingletonLeft" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
                  (rule "subsetSingletonLeft" (formula "11"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")) (ifInst ""  (formula "8")))
                  (rule "closeTrue" (formula "11"))
               )
               (branch "Case 2"
                  (rule "Class_invariant_axiom_for_LinkedListIterator" (formula "12") (inst "i=i") (inst "f=f") (inst "i_0=i_0") (inst "f_0=f_0") (userinteraction))
                  (rule "andRight" (formula "12"))
                  (branch "Case 1"
                     (rule "notRight" (formula "12"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                     (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedListIterator_list_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "close" (formula "12") (ifseqformula "2"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "12"))
                     (branch "Case 1"
                        (rule "andRight" (formula "12"))
                        (branch "Case 1"
                           (rule "andRight" (formula "12"))
                           (branch "Case 1"
                              (rule "andRight" (formula "12"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "12"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "12"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "12"))
                                       (branch "Case 1"
                                          (rule "dismissNonSelectedField" (formula "12") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "1"))
                                          (rule "inEqSimp_leqRight" (formula "12"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedListIterator_index_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "Case 2"
                                          (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                                          (rule "inEqSimp_leqRight" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedListIterator_index_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "times_zero_2" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "pullOutSelect" (formula "1") (term "1,0,0") (inst "selectSK=LinkedListIterator_list_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                          (rule "replaceKnownSelect_taclet0_0" (formula "2") (term "0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "2") (term "0,0"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "Class_invariant_axiom_for_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "j=j") (inst "i_1=i_1") (inst "i_2=i_2") (inst "f=f") (inst "i_3=i_3") (inst "n=n"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "13") (term "1,0,1"))
                                          (rule "eqSymm" (formula "13") (term "1,1"))
                                          (rule "eqSymm" (formula "9"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                          (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                          (rule "apply_eq_monomials" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "nnf_imp2or" (formula "14") (term "1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_and" (formula "10") (term "1,0,1,0"))
                                          (rule "commute_and" (formula "10") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "11") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "11") (term "1,0,1,0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "cnf_rightDist" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "commute_or" (formula "13"))
                                          (rule "cnf_rightDist" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "cnf_rightDist" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "cnf_rightDist" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "commute_or" (formula "13"))
                                          (rule "shift_paren_or" (formula "20") (term "0,1,0"))
                                          (rule "cut_direct" (formula "5") (term "0"))
                                          (branch "CUT: head = null TRUE"
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "5")))
                                             (rule "andLeft" (formula "12"))
                                             (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "15") (term "0,0,0,1,0,0,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,1,0,0,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "10") (term "0,1,1,1,0,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "16") (term "0,1,1,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "7") (term "1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "CUT: head = null FALSE"
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "22")))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "22")))
                                             (rule "true_left" (formula "15"))
                                             (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "22")))
                                             (rule "true_left" (formula "13"))
                                             (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "21")))
                                             (rule "true_left" (formula "14"))
                                             (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
                                             (rule "true_left" (formula "15"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,1") (ifseqformula "8"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "false_right" (formula "19"))
                                             (rule "commute_or_2" (formula "16") (term "0,0,1,0"))
                                             (rule "applyEq_and_gen2" (formula "11") (term "1,0,1,0"))
                                             (rule "lenNonNegative" (formula "8") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "12") (inst "sk=i_0_0"))
                                       (rule "impRight" (formula "12"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "13") (term "0,1,0,1,0") (inst "selectSK=LinkedListIterator_seen_0"))
                                       (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "lenOfSeqEmptyEQ" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "14") (term "0,1,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "12") (inst "sk=i_0"))
                                    (rule "impRight" (formula "12"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "13") (term "0,1,0,1,0") (inst "selectSK=LinkedListIterator_to_see_0"))
                                    (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "14") (term "0,1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "nnf_ex2all" (formula "13"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "nnf_notOr" (formula "1") (term "0,0,0"))
                                    (rule "Class_invariant_axiom_for_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "j=j") (inst "i_1=i_1") (inst "i_2=i_2") (inst "f=f") (inst "i_3=i_3") (inst "n=n"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0,0"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,1"))
                                    (rule "eqSymm" (formula "15") (term "1,0,1"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1"))
                                    (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "15") (term "0,1,0,1"))
                                    (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "15") (term "0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "9"))
                                    (rule "applyEq" (formula "15") (term "1,1,0,1,1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,1") (ifseqformula "9"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "11") (term "1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "nnf_imp2or" (formula "18") (term "1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "18") (term "0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0"))
                                    (rule "commute_or" (formula "1") (term "1,0"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (rule "commute_and" (formula "14") (term "0,0,1,0"))
                                    (rule "commute_and" (formula "14") (term "1,0,1,0"))
                                    (rule "commute_and" (formula "15") (term "1,0,1,0"))
                                    (rule "commute_and" (formula "15") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "cnf_rightDist" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "commute_or" (formula "17"))
                                    (rule "shift_paren_or" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "cnf_rightDist" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "cnf_rightDist" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "cnf_rightDist" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "commute_or" (formula "17"))
                                    (rule "shift_paren_or" (formula "24") (term "0,1,0"))
                                    (rule "cnf_rightDist" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "cnf_rightDist" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "cnf_rightDist" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "cnf_rightDist" (formula "1") (term "0"))
                                    (rule "distr_forallAnd" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "shift_paren_or" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "castedGetAny" (formula "1") (term "0,1,0"))
                                    (rule "castedGetAny" (formula "1") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_or" (formula "1") (term "0"))
                                    (rule "cnf_rightDist" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "cut_direct" (formula "8") (term "0"))
                                    (branch "CUT: head = null TRUE"
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                       (rule "andLeft" (formula "16"))
                                       (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "18") (term "1,0,1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "applyEq" (formula "10") (term "1") (ifseqformula "8"))
                                       (rule "applyEq" (formula "14") (term "0,1,1,1,0,1,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "18") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "20") (term "0,1,1,0,0,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "19") (term "0,0,0,1,0,0,1,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,1,0,0,1,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "17") (term "1,1,0"))
                                       (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "18") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "12") (term "1") (ifseqformula "11"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: head = null FALSE"
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "16") (term "0,1,1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "30")))
                                       (rule "notLeft" (formula "16"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "16") (term "1,0,1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")))
                                       (rule "notLeft" (formula "16"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "20")))
                                       (rule "true_left" (formula "19"))
                                       (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "17")))
                                       (rule "true_left" (formula "16"))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "21")))
                                       (rule "true_left" (formula "20"))
                                       (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "25")))
                                       (rule "true_left" (formula "17"))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                                       (rule "true_left" (formula "20"))
                                       (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                       (rule "true_left" (formula "18"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1") (ifseqformula "11"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                       (rule "nnf_imp2or" (formula "23") (term "0,1"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                       (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                                       (rule "applyEq_and_gen2" (formula "15") (term "1,0,1,0"))
                                       (rule "lenNonNegative" (formula "11") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "lenNonNegative" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "shift_paren_and" (formula "15") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "castedGetAny" (formula "15") (term "1,0,1,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "1,0,0,1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "15") (term "0"))
                                       (rule "distr_forallAnd" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "shift_paren_or" (formula "16") (term "0"))
                                       (rule "cnf_rightDist" (formula "15") (term "0"))
                                       (rule "distr_forallAnd" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "shift_paren_or" (formula "16") (term "0"))
                                       (rule "cnf_rightDist" (formula "15") (term "0"))
                                       (rule "distr_forallAnd" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "shift_paren_or" (formula "16") (term "0"))
                                       (rule "commute_or" (formula "15") (term "0,0"))
                                       (rule "commute_or" (formula "24") (term "0,0,0,1,0"))
                                       (rule "shift_paren_and" (formula "19") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "castedGetAny" (formula "19") (term "1,0,1,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,1,0"))
                                       (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "19") (term "0"))
                                       (rule "distr_forallAnd" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "shift_paren_or" (formula "20") (term "0"))
                                       (rule "cnf_rightDist" (formula "19") (term "0"))
                                       (rule "distr_forallAnd" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "shift_paren_or" (formula "20") (term "0"))
                                       (rule "cnf_rightDist" (formula "19") (term "0"))
                                       (rule "distr_forallAnd" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "commute_or_2" (formula "19") (term "0"))
                                       (rule "shift_paren_or" (formula "20") (term "0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "all_pull_out3" (formula "27") (term "0"))
                                       (rule "shift_paren_or" (formula "27") (term "0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                       (rule "commute_or" (formula "27") (term "0,0,0,0,0,0"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0,0,0,1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "cut_direct" (formula "1") (term "0,0"))
                                       (branch "CUT: (FileReader)l.values[i_0] = null TRUE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                          (rule "castedGetAny" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "allLeft" (formula "19") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "4"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "19"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0"))
                                          (rule "leq_literals" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                       (branch "CUT: (FileReader)l.values[i_0] = null FALSE"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "allLeft" (formula "28") (inst "t=i_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "typeEqDerived" (formula "1") (term "0,0,1") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                          (rule "castedGetAny" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "allLeft" (formula "19") (inst "t=i_0"))
                                          (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "30")))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "19"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "eqSymm" (formula "12"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "1,0,0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                                 (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "11") (inst "iv=iv"))
                                 (rule "lenOfSeqSub" (formula "11") (term "1,0"))
                                 (rule "eqSymm" (formula "11") (term "0"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "11") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0"))
                                 (rule "getOfSeqSub" (formula "11") (term "1,1,0,1"))
                                 (rule "castDel" (formula "11") (term "2,1,1,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "1,1,1,1,0,1"))
                                 (rule "eqSymm" (formula "11") (term "1,0,1"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,1,0,1"))
                                 (rule "times_zero_2" (formula "11") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1"))
                                 (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=LinkedListIterator_seen_0"))
                                 (rule "applyEq" (formula "12") (term "0,1,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "lenOfSeqEmptyEQ" (formula "12") (term "1,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "lenOfSeqEmptyEQ" (formula "12") (term "1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "add_zero_right" (formula "12") (term "1,1,0,0,1"))
                                 (rule "applyEqReverse" (formula "12") (term "0,1,1,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "11") (term "1,1,1,0,0,1,0,1") (inst "selectSK=LinkedListIterator_index_0"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "12") (term "1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0,1"))
                                 (rule "applyEqReverse" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "allRight" (formula "12") (inst "sk=iv_0"))
                                 (rule "impRight" (formula "12"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "2")))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "eqSymm" (formula "12"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,2,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,2,0"))
                              (rule "eqSymm" (formula "12"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,2,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,2,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,2,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,2,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,2,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,1"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "11") (inst "iv=iv"))
                              (rule "lenOfSeqSub" (formula "11") (term "1,0"))
                              (rule "eqSymm" (formula "11") (term "0"))
                              (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                              (rule "getOfSeqSub" (formula "11") (term "1,1,0,1"))
                              (rule "castDel" (formula "11") (term "2,1,1,0,1"))
                              (rule "eqSymm" (formula "11") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,1,0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "11") (term "0,0,1,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,0,1,1,0,0,1,0,1"))
                              (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=LinkedListIterator_to_see_0"))
                              (rule "applyEq" (formula "12") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "0,1,1,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "12") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "12") (term "0,1,1,0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "11") (term "1,0,0,1,0,0") (inst "selectSK=LinkedListIterator_list_0"))
                              (rule "applyEq" (formula "12") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,0,1,0,1,1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "12") (term "0,0,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "12") (term "0,0,1,0,0"))
                              (rule "applyEqReverse" (formula "12") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "12") (term "0,1,0,1,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "12") (term "0,1,0,1,0,1"))
                              (rule "applyEqReverse" (formula "12") (term "1,0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "12") (term "0,1,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "12") (term "0,1,1,0,0,0"))
                              (rule "applyEqReverse" (formula "12") (term "1,0,1,0,1,1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "replaceKnownSelect_taclet0_0" (formula "12") (term "0,1,0,1,1,0,0,1,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "12") (term "0,1,0,1,1,0,0,1,0,1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "11") (term "0,1,1,0,0") (inst "selectSK=LinkedListIterator_index_0"))
                              (rule "applyEq" (formula "12") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "0,1,1,0,1,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "12") (term "0,1,1,0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "1,0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "mul_literals" (formula "12") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0,1"))
                              (rule "applyEqReverse" (formula "12") (term "0,1,1,0,1,0,1") (ifseqformula "1"))
                              (rule "add_zero_left" (formula "12") (term "1,1,0,1,0,1"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "applyEqReverse" (formula "12") (term "0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "11") (term "1,0"))
                              (rule "eqSymm" (formula "11") (term "1,1,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                              (rule "times_zero_2" (formula "11") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0"))
                              (rule "nnf_imp2or" (formula "11") (term "0,1"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1"))
                              (rule "Class_invariant_axiom_for_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "j=j") (inst "i_1=i_1") (inst "i_2=i_2") (inst "f=f") (inst "i_3=i_3") (inst "n=n"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,1,0,0,1,0,0"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                              (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                              (rule "eqSymm" (formula "13") (term "1,0"))
                              (rule "eqSymm" (formula "12") (term "1,1"))
                              (rule "eqSymm" (formula "12") (term "1,0,1"))
                              (rule "eqSymm" (formula "8"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,1"))
                              (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                              (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                              (rule "castedGetAny" (formula "12") (term "0,1,0,1"))
                              (rule "castedGetAny" (formula "13") (term "0,1,0"))
                              (rule "eqSymm" (formula "13") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "12") (term "0,1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                              (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "19") (term "1,1,1,0,1,0,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "12") (term "1,1,0,1,1") (ifseqformula "7"))
                              (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "12") (term "1,1,0,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0,1") (ifseqformula "8"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                              (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                              (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "19") (term "1,1,1,0,1,0,1") (ifseqformula "7"))
                              (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0,1") (ifseqformula "7"))
                              (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "14") (term "1,0,1,0"))
                              (rule "nnf_imp2or" (formula "10") (term "0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_imp2or" (formula "11") (term "0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0"))
                              (rule "commute_or" (formula "19") (term "0"))
                              (rule "inEqSimp_or_weaken1" (formula "19") (term "0"))
                              (rule "add_zero_right" (formula "19") (term "1,0,0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "cnf_rightDist" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or_2" (formula "16") (term "0"))
                              (rule "cut_direct" (formula "4") (term "0"))
                              (branch "CUT: head = null TRUE"
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "replace_known_left" (formula "13") (term "1,0,1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "4")))
                                 (rule "andLeft" (formula "12"))
                                 (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
                                 (rule "true_left" (formula "14"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "10") (term "0,1,0,1,0,1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,1,0,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "eqSymm" (formula "7"))
                                 (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,1,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "14") (term "0,1,1,0,0") (ifseqformula "12"))
                                 (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "7"))
                                 (rule "add_zero_right" (formula "14") (term "1,1,0"))
                                 (rule "applyEq" (formula "15") (term "1,1,0,0,1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "allRight" (formula "20") (inst "sk=iv_0"))
                                 (rule "orRight" (formula "20"))
                                 (rule "orRight" (formula "21"))
                                 (rule "orRight" (formula "20"))
                                 (rule "inEqSimp_geqRight" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "21"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_leqRight" (formula "22"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "10"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "10"))
                                 (rule "mul_literals" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: head = null FALSE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "17")))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "replace_known_right" (formula "14") (term "1,0,1") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                                 (rule "nnf_imp2or" (formula "18") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,1"))
                                 (rule "commute_and" (formula "10") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "10") (term "1,0,1,0"))
                                 (rule "commute_and" (formula "11") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "11") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "shift_paren_or" (formula "16") (term "0,1,0"))
                                 (rule "commute_or_2" (formula "16") (term "0,0,1,0"))
                                 (rule "lenNonNegative" (formula "7") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "allRight" (formula "25") (inst "sk=iv_0"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "26"))
                                 (rule "orRight" (formula "25"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "26"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_leqRight" (formula "27"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "eqSymm" (formula "12") (term "1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,2"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,2"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,2"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,2"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
                           (rule "castedGetAny" (formula "12") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "12") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0"))
                           (rule "pullOutSelect" (formula "11") (term "0,2") (inst "selectSK=LinkedListIterator_curr_0"))
                           (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "12") (term "0,2") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "12") (term "1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "11") (term "1,0,1") (inst "selectSK=LinkedListIterator_index_0"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "12") (term "1,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "12") (term "0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0"))
                           (rule "mul_literals" (formula "11") (term "1,0"))
                           (rule "pullOutSelect" (formula "11") (term "1,0,0,1") (inst "selectSK=LinkedListIterator_list_0"))
                           (rule "applyEq" (formula "12") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "12") (term "1,0,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "12") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "replaceKnownSelect_taclet0_0" (formula "12") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "12") (term "0,0,0"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "11") (term "0,0,1") (inst "selectSK=LinkedList_nodeList_0"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                           (rule "applyEqReverse" (formula "12") (term "0,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "Class_invariant_axiom_for_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "j=j") (inst "i_1=i_1") (inst "i_2=i_2") (inst "f=f") (inst "i_3=i_3") (inst "n=n"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "translateJavaSubInt" (formula "7") (term "1,1,0,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,1,0,0,0"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "7"))
                           (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "13") (term "1,0"))
                           (rule "eqSymm" (formula "12") (term "1,0,1"))
                           (rule "eqSymm" (formula "12") (term "1,1"))
                           (rule "eqSymm" (formula "8"))
                           (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,1"))
                           (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,1"))
                           (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                           (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                           (rule "castedGetAny" (formula "12") (term "0,1,0,1"))
                           (rule "castedGetAny" (formula "13") (term "0,1,0"))
                           (rule "eqSymm" (formula "13") (term "1,0"))
                           (rule "castedGetAny" (formula "12") (term "0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                           (rule "applyEq" (formula "12") (term "1,1,0,1,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "12") (term "1,1,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,1") (ifseqformula "6"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                           (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "14") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "10") (term "0"))
                           (rule "nnf_imp2or" (formula "13") (term "0"))
                           (rule "nnf_imp2or" (formula "11") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_notAnd" (formula "10") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "11") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "14") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "commute_and" (formula "10") (term "1,0,1,0"))
                           (rule "commute_and" (formula "10") (term "0,0,1,0"))
                           (rule "commute_and" (formula "11") (term "0,0,1,0"))
                           (rule "commute_and" (formula "11") (term "1,0,1,0"))
                           (rule "commute_or" (formula "14") (term "0,0"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "cnf_rightDist" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "cut_direct" (formula "4") (term "0"))
                           (branch "CUT: head = null TRUE"
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "replace_known_left" (formula "21") (term "2") (ifseqformula "4"))
                              (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "4")))
                              (rule "andLeft" (formula "12"))
                              (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
                              (rule "true_left" (formula "14"))
                              (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "16") (term "0,1,1,0,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "10") (term "0,1,1,1,0,1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "20") (term "0,0,1") (ifseqformula "12"))
                              (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "eqSymm" (formula "7"))
                              (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "14") (term "0,1,0,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "14") (term "0,1,0,0,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "7"))
                              (rule "add_zero_right" (formula "14") (term "1,1,0"))
                              (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "closeTrue" (formula "20"))
                           )
                           (branch "CUT: head = null FALSE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "22") (term "2") (ifseqformula "18"))
                              (rule "replace_known_right" (formula "13") (term "1,1") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "18")))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "13"))
                              (rule "notLeft" (formula "12"))
                              (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "1"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1"))
                              (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,1") (ifseqformula "8"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                              (rule "nnf_imp2or" (formula "18") (term "0,1"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,1"))
                              (rule "shift_paren_or" (formula "16") (term "0,1,0"))
                              (rule "applyEq_and_gen2" (formula "11") (term "1,0,1,0"))
                              (rule "commute_or_2" (formula "16") (term "0,0,1,0"))
                              (rule "shift_paren_and" (formula "10") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "castedGetAny" (formula "10") (term "1,0,1,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "10") (term "0,0,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,1,0"))
                              (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,1,0"))
                              (rule "cnf_rightDist" (formula "10") (term "0"))
                              (rule "distr_forallAnd" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "shift_paren_or" (formula "11") (term "0"))
                              (rule "cnf_rightDist" (formula "10") (term "0"))
                              (rule "distr_forallAnd" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "shift_paren_or" (formula "11") (term "0"))
                              (rule "cnf_rightDist" (formula "10") (term "0"))
                              (rule "distr_forallAnd" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "commute_or_2" (formula "10") (term "0"))
                              (rule "shift_paren_or" (formula "11") (term "0"))
                              (rule "commute_or" (formula "10") (term "0,0"))
                              (rule "lenNonNegative" (formula "8") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "8"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                              (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "allRight" (formula "23") (inst "sk=iv_0"))
                              (rule "orRight" (formula "23"))
                              (rule "orRight" (formula "23"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "10"))
                              (rule "mul_literals" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "10"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "21") (term "1,1,0,0,1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "9"))
                              (rule "add_zero_right" (formula "19") (term "1,0"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "9"))
                              (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "Class_invariant_axiom_for_LinkedList" (formula "12") (inst "i=i") (inst "i_0=i_0") (inst "j=j") (inst "i_1=i_1") (inst "i_2=i_2") (inst "f=f") (inst "i_3=i_3") (inst "n=n") (userinteraction))
                        (rule "Class_invariant_axiom_for_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "j=j") (inst "i_1=i_1") (inst "i_2=i_2") (inst "f=f") (inst "i_3=i_3") (inst "n=n") (userinteraction))
                        (rule "andRight" (formula "12"))
                        (branch "Case 1"
                           (rule "andRight" (formula "12"))
                           (branch "Case 1"
                              (rule "andRight" (formula "12"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "12"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "12"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "12"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "12"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "12"))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,1"))
                                                (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,1"))
                                                (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                (rule "apply_eq_monomials" (formula "11") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "19") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "19"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                                (rule "eqSymm" (formula "19"))
                                                (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_size_0"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "closeTrue" (formula "20"))
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,1"))
                                                (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                                (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                                (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,1,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "19") (term "0,1") (inst "selectSK=LinkedList_nodeList_0"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                (rule "pullOutSelect" (formula "20") (term "1,0,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                                (rule "replaceKnownSelect_taclet0_0" (formula "21") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "21") (term "0,0"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                                (rule "eqSymm" (formula "19"))
                                                (rule "close" (formula "19") (ifseqformula "7"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "8"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "13") (term "1,1"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "20"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "14") (term "1,1,0,1,1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                             (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "allRight" (formula "20") (inst "sk=i_3_0"))
                                          (rule "impRight" (formula "20"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,1"))
                                          (rule "eqSymm" (formula "15") (term "1,0,1"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1"))
                                          (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                          (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0,1,1") (ifseqformula "10"))
                                          (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "apply_eq_monomials" (formula "13") (term "1,0,0,1,0,0") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "apply_eq_monomials" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "21") (term "1,0,1,0,1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                          (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "21") (term "0,1,0,1,0") (inst "selectSK=LinkedList_nodeList_0"))
                                          (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "1,0,1,0"))
                                          (rule "nnf_ex2all" (formula "22"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "19") (term "0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "nnf_notOr" (formula "1") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "commute_or_2" (formula "18") (term "0"))
                                          (rule "commute_or_2" (formula "20") (term "0"))
                                          (rule "commute_and" (formula "14") (term "1,0,1,0"))
                                          (rule "commute_and" (formula "14") (term "0,0,1,0"))
                                          (rule "commute_and" (formula "15") (term "1,0,1,0"))
                                          (rule "commute_and" (formula "15") (term "0,0,1,0"))
                                          (rule "commute_or" (formula "1") (term "1,0"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "1") (term "0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "cut_direct" (formula "8") (term "0"))
                                          (branch "CUT: head = null TRUE"
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                             (rule "andLeft" (formula "16"))
                                             (rule "replace_known_left" (formula "18") (term "1,1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
                                             (rule "true_left" (formula "18"))
                                             (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "applyEq" (formula "20") (term "0,1,1,0,0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "14") (term "0,1,1,1,0,1,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "18") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,1,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "1") (term "0,1,0,1,1,0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "19") (term "0,0,0,0,1,0,1,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "19") (term "1,1,0,0,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "11"))
                                             (rule "add_zero_right" (formula "18") (term "1,1,0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "12") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: head = null FALSE"
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")))
                                             (rule "andLeft" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "notLeft" (formula "16"))
                                             (rule "notLeft" (formula "16"))
                                             (rule "replace_known_right" (formula "18") (term "1,1") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                                             (rule "true_left" (formula "19"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1") (ifseqformula "11"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                             (rule "nnf_imp2or" (formula "23") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                             (rule "lenNonNegative" (formula "11") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                             (rule "shift_paren_or" (formula "1") (term "0,0"))
                                             (rule "lenNonNegative" (formula "13") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                             (rule "commute_and" (formula "1") (term "1,0"))
                                             (rule "applyEq_and_gen2" (formula "16") (term "1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "1") (term "0"))
                                             (rule "distr_forallAnd" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castedGetAny" (formula "1") (term "0,0,0,0"))
                                             (rule "castedGetAny" (formula "1") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "1") (term "1,0,1,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0") (inst "selectSK=java_lang_Object_created__0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,1,0,0") (inst "selectSK=Node_value_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                             (rule "applyEqReverse" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (rule "shift_paren_or" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "castedGetAny" (formula "2") (term "1,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet110000011110000_8" (formula "2") (term "0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110000011110000_9" (formula "2") (term "0,1,1,0"))
                                             (rule "castedGetAny" (formula "2") (term "0,0,1,0"))
                                             (rule "castedGetAny" (formula "2") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "commute_or_2" (formula "21") (term "0,0,1,0"))
                                             (rule "shift_paren_and" (formula "15") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,1,0"))
                                             (rule "cnf_rightDist" (formula "15") (term "0"))
                                             (rule "distr_forallAnd" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "shift_paren_or" (formula "16") (term "0"))
                                             (rule "cnf_rightDist" (formula "15") (term "0"))
                                             (rule "distr_forallAnd" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "shift_paren_or" (formula "16") (term "0"))
                                             (rule "cnf_rightDist" (formula "15") (term "0"))
                                             (rule "distr_forallAnd" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "commute_or_2" (formula "15") (term "0"))
                                             (rule "shift_paren_or" (formula "16") (term "0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or" (formula "24") (term "0,0,0,1,0"))
                                             (rule "shift_paren_and" (formula "19") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,1,0"))
                                             (rule "castedGetAny" (formula "19") (term "1,0,1,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,1,0"))
                                             (rule "cnf_rightDist" (formula "19") (term "0"))
                                             (rule "distr_forallAnd" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "shift_paren_or" (formula "20") (term "0"))
                                             (rule "cnf_rightDist" (formula "19") (term "0"))
                                             (rule "distr_forallAnd" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "shift_paren_or" (formula "20") (term "0"))
                                             (rule "cnf_rightDist" (formula "19") (term "0"))
                                             (rule "distr_forallAnd" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "shift_paren_or" (formula "20") (term "0"))
                                             (rule "commute_or" (formula "19") (term "0,0"))
                                             (rule "all_pull_out3" (formula "27") (term "0"))
                                             (rule "shift_paren_or" (formula "27") (term "0,0"))
                                             (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                             (rule "commute_or" (formula "27") (term "0,0,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                             (rule "castedGetAny" (formula "24") (term "0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                             (rule "castedGetAny" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "cut_direct" (formula "30") (term "0"))
                                             (branch "CUT: l.size = 0 TRUE"
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "allRight" (formula "31") (inst "sk=iv_0"))
                                                (rule "orRight" (formula "31"))
                                                (rule "orRight" (formula "31"))
                                                (rule "inEqSimp_leqRight" (formula "31"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "29") (term "1,1,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1,0"))
                                                (rule "add_zero_right" (formula "7") (term "0"))
                                                (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "3"))
                                                (rule "add_zero_right" (formula "26") (term "1,0"))
                                                (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "28") (term "1,1,0,0,0,0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                                (rule "times_zero_2" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "3"))
                                                (rule "add_zero_right" (formula "27") (term "1,1,0"))
                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "3"))
                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                             (branch "CUT: l.size = 0 FALSE"
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "false_right" (formula "31"))
                                                (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "30"))
                                                (rule "add_literals" (formula "11") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "11"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "false_right" (formula "30"))
                                                (rule "allLeft" (formula "28") (inst "t=i_3_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                (rule "leq_literals" (formula "28") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "allLeft" (formula "18") (inst "t=i_3_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "18") (term "0,0,1"))
                                                (rule "leq_literals" (formula "18") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "18"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "allLeft" (formula "17") (inst "t=i_3_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,1"))
                                                (rule "leq_literals" (formula "17") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "17") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "allLeft" (formula "15") (inst "t=i_3_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                (rule "leq_literals" (formula "15") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "15") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, l, LinkedList::$size))"))
                                                (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,1"))
                                                (rule "add_literals" (formula "14") (term "0,1"))
                                                (rule "leq_literals" (formula "14") (term "1"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "26"))
                                                (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, l, LinkedList::$size))"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,1"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,1"))
                                                (rule "add_literals" (formula "29") (term "0,1"))
                                                (rule "leq_literals" (formula "29") (term "1"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_homoInEq0" (formula "29") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                                (rule "add_literals" (formula "29") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "29") (term "0,1"))
                                                (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "25"))
                                                (rule "inEqSimp_invertInEq1" (formula "29") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
                                                (rule "mul_literals" (formula "29") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "29") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "allLeft" (formula "14") (inst "t=Z(0(#))"))
                                                (rule "leq_literals" (formula "14") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "25"))
                                                (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, l, LinkedList::$size))"))
                                                (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "16") (term "0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,1"))
                                                (rule "add_literals" (formula "16") (term "0,1"))
                                                (rule "leq_literals" (formula "16") (term "1"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                                (rule "add_literals" (formula "16") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "16") (term "0,1"))
                                                (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "26"))
                                                (rule "inEqSimp_invertInEq1" (formula "16") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                                                (rule "mul_literals" (formula "16") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "16") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "allLeft" (formula "30") (inst "t=Z(0(#))"))
                                                (rule "leq_literals" (formula "30") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "30") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "allLeft" (formula "16") (inst "t=Z(0(#))"))
                                                (rule "leq_literals" (formula "16") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "25"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "16") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "allLeft" (formula "15") (inst "t=i_3_0"))
                                                (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "35")))
                                                (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "15") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "3"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "15"))
                                                (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0"))
                                                (rule "add_zero_right" (formula "15") (term "0"))
                                                (rule "leq_literals" (formula "15"))
                                                (rule "closeFalse" (formula "15"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "allRight" (formula "20") (inst "sk=i_2_0"))
                                       (rule "impRight" (formula "20"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                       (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,1"))
                                       (rule "eqSymm" (formula "15") (term "1,0,1"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1"))
                                       (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                       (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "15") (term "1,1,0,1,1") (ifseqformula "10"))
                                       (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "9"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,1") (ifseqformula "8"))
                                       (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "apply_eq_monomials" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "21") (term "0,1,0,1,0") (inst "selectSK=LinkedList_values_1"))
                                       (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "23") (term "0,1,0,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "23") (term "1,0,1,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "1,0,1,0"))
                                       (rule "nnf_ex2all" (formula "22"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "nnf_notOr" (formula "1") (term "0,0,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "commute_and" (formula "14") (term "0,0,1,0"))
                                       (rule "commute_and" (formula "14") (term "1,0,1,0"))
                                       (rule "commute_and" (formula "15") (term "1,0,1,0"))
                                       (rule "commute_and" (formula "15") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "1") (term "1,0"))
                                       (rule "commute_or" (formula "1") (term "0,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "cnf_rightDist" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "commute_or" (formula "17"))
                                       (rule "cnf_rightDist" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "cut_direct" (formula "8") (term "0"))
                                       (branch "CUT: head = null TRUE"
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
                                          (rule "andLeft" (formula "16"))
                                          (rule "replace_known_left" (formula "18") (term "1,0,1") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                                          (rule "true_left" (formula "18"))
                                          (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "applyEq" (formula "14") (term "0,1,1,1,0,1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "applyEq" (formula "18") (term "0,1,0,0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "19") (term "0,0,0,0,1,0,1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "20") (term "0,1,1,0,0,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "10") (term "1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "11"))
                                          (rule "add_zero_right" (formula "18") (term "1,1,0"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,0,1,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "12") (term "1") (ifseqformula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: head = null FALSE"
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "24")))
                                          (rule "andLeft" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,1") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")))
                                          (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                                          (rule "true_left" (formula "20"))
                                          (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "19")))
                                          (rule "true_left" (formula "18"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1") (ifseqformula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                          (rule "nnf_imp2or" (formula "23") (term "0,1"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                          (rule "shift_paren_or" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "shift_paren_or" (formula "20") (term "0,1,0"))
                                          (rule "lenNonNegative" (formula "11") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                          (rule "lenNonNegative" (formula "13") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "applyEq_and_gen2" (formula "16") (term "1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "1") (term "0"))
                                          (rule "distr_forallAnd" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castedGetAny" (formula "1") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "1") (term "0,1,0"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_or" (formula "1") (term "0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0,1,0"))
                                          (rule "shift_paren_and" (formula "15") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "castedGetAny" (formula "15") (term "1,0,1,1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,0,1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,0,0,1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "shift_paren_or" (formula "16") (term "0"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "shift_paren_or" (formula "16") (term "0"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "shift_paren_or" (formula "16") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "24") (term "0,0,0,1,0"))
                                          (rule "shift_paren_and" (formula "19") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "castedGetAny" (formula "19") (term "0,0,0,0,0,1,0"))
                                          (rule "castedGetAny" (formula "19") (term "1,0,1,1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "19") (term "0,0,1,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "19") (term "0"))
                                          (rule "distr_forallAnd" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "shift_paren_or" (formula "20") (term "0"))
                                          (rule "cnf_rightDist" (formula "19") (term "0"))
                                          (rule "distr_forallAnd" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "shift_paren_or" (formula "20") (term "0"))
                                          (rule "cnf_rightDist" (formula "19") (term "0"))
                                          (rule "distr_forallAnd" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "commute_or_2" (formula "19") (term "0"))
                                          (rule "shift_paren_or" (formula "20") (term "0"))
                                          (rule "commute_or" (formula "19") (term "0,0"))
                                          (rule "all_pull_out3" (formula "27") (term "0"))
                                          (rule "shift_paren_or" (formula "27") (term "0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "27") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "27") (term "0,0,0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                          (rule "castedGetAny" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                          (rule "castedGetAny" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "cut_direct" (formula "30") (term "0"))
                                          (branch "CUT: l.size = 0 TRUE"
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "allRight" (formula "31") (inst "sk=iv_0"))
                                             (rule "orRight" (formula "31"))
                                             (rule "orRight" (formula "31"))
                                             (rule "inEqSimp_leqRight" (formula "31"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "29") (term "1,1,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "3"))
                                             (rule "add_zero_right" (formula "27") (term "1,1,0"))
                                             (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "3"))
                                             (rule "add_zero_right" (formula "26") (term "1,0"))
                                             (rule "applyEq" (formula "28") (term "1,1,0,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "15") (term "1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "14") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                          (branch "CUT: l.size = 0 FALSE"
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "false_right" (formula "31"))
                                             (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "30"))
                                             (rule "add_zero_right" (formula "11") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "11"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "allLeft" (formula "28") (inst "t=i_2_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                             (rule "leq_literals" (formula "28") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "typeEqDerived" (formula "1") (term "0,0,1") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "allLeft" (formula "21") (inst "t=i_2_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                             (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                             (rule "leq_literals" (formula "21") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "21") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "allLeft" (formula "22") (inst "t=i_2_0"))
                                             (rule "typeEqDerived" (formula "22") (term "0,0,0") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                             (rule "leq_literals" (formula "19") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "allLeft" (formula "19") (inst "t=i_2_0"))
                                             (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "31"))
                                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "30")))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                             (rule "leq_literals" (formula "19") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "12"))
                                    (rule "andRight" (formula "12"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "13"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "12"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "13"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "13"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "13"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "13"))
                                                      (branch
                                                         (rule "notRight" (formula "13"))
                                                         (rule "close" (formula "13") (ifseqformula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "notRight" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1,0,0"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "14") (term "1,1"))
                                                         (rule "eqSymm" (formula "10"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0,1"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                         (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "14") (term "1,1,0,1,1") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "20") (inst "iv=iv"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedList_head_0"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                                         (rule "pullOutSelect" (formula "21") (term "1,0,0,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                         (rule "applyEq" (formula "22") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "22") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "22") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "22") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                                         (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "applyEq" (formula "16") (term "0,0,0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "16") (term "0,1,0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "15") (term "0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "11") (term "0,1,0,1,0,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "17") (term "0,1,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "13"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "eqSymm" (formula "8"))
                                                         (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "8"))
                                                         (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "8"))
                                                         (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "8"))
                                                         (rule "add_zero_right" (formula "10") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "8"))
                                                         (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "8"))
                                                         (rule "add_zero_right" (formula "15") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                         (rule "pullOutSelect" (formula "20") (term "0,0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                                         (rule "applyEq" (formula "21") (term "0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                         (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "21") (term "0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,1") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "add_zero_right" (formula "20") (term "1,1,0,0,1"))
                                                         (rule "applyEq" (formula "20") (term "0,0,1,0,1") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "closeTrue" (formula "20"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "notRight" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1,0,0"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "14") (term "1,1"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0,1"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "14") (term "1,1,0,1,1") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "20") (inst "iv=iv"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1"))
                                                      (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                      (rule "applyEq" (formula "21") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "21") (term "1,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "21") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedList_tail_0"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEq" (formula "6") (term "1") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "10") (term "0,1,0,1,0,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "12"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "15") (term "0,0,0,1,0,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "16") (term "0,1,1,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,1,0,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "15") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "applyEq" (formula "14") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "9") (term "1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                      (rule "pullOutSelect" (formula "19") (term "0,1,1,1,0,0,1") (inst "selectSK=LinkedList_nodeList_0"))
                                                      (rule "applyEq" (formula "20") (term "0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                      (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "20") (term "0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "applyEq" (formula "19") (term "0,0,1,0,1") (ifseqformula "11"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "11"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "closeTrue" (formula "19"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "13") (term "1,1"))
                                                   (rule "eqSymm" (formula "9"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "12") (term "1,1,0,1") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "12") (term "1,1,0,1,1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,1") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "apply_eq_monomials" (formula "11") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "11") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "11") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                   (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                                   (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=Node_next_0"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                   (rule "pullOutSelect" (formula "20") (term "0,0,1,0,1") (inst "selectSK=LinkedList_nodeList_0"))
                                                   (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                   (rule "pullOutSelect" (formula "2") (term "1,1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "castDel" (formula "2") (term "0"))
                                                   (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "22") (term "0,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "22") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "22") (term "1,0,1,1,1,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "20") (term "1,1,1,0,0,1") (ifseqformula "8"))
                                                   (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedList_tail_0"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                   (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "12") (term "1,0,0,1") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "20") (term "0,0,1,0,1") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "applyEq" (formula "16") (term "0,1,1,1,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "15") (term "0,1,0,1,0,1,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "close" (formula "20") (ifseqformula "6"))
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "13") (term "1,1"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "castedGetAny" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                                (rule "pullOutSelect" (formula "20") (term "1") (inst "selectSK=LinkedList_head_0"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                (rule "pullOutSelect" (formula "21") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                                (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "0,0,1,0,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "22") (term "0,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0,1,1,1,0,0,1") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "6"))
                                                (rule "replace_known_right" (formula "12") (term "1,0,1") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "13"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "20") (term "1,1,1,0,0,1") (ifseqformula "6"))
                                                (rule "applyEq" (formula "9") (term "0,1,0,1,0,1,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "5") (term "1") (ifseqformula "12"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "allRight" (formula "20") (inst "sk=iv_0"))
                                                (rule "impRight" (formula "20"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "18") (term "0,1,1,1,0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "17") (term "0,1,0,1,0,1,0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "17") (term "0,0,0,1,0,1,0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "23") (term "1") (ifseqformula "14"))
                                                (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                                (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0"))
                                                (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "8"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "add_zero_right" (formula "18") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "8"))
                                                (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "closeTrue" (formula "21"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "13"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "13"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "13"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "13"))
                                                      (branch "Case 1"
                                                         (rule "notRight" (formula "13"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1,0,0"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "andLeft" (formula "9"))
                                                         (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "14") (term "1,1"))
                                                         (rule "eqSymm" (formula "10"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0,1"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                         (rule "applyEq" (formula "14") (term "1,1,0,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "14") (term "1,1,0,1,1") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                         (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                         (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedList_nodeList_0"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_left" (formula "13") (term "0,0,0,0,0,0,1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "13"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "16") (term "0,1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "15") (term "0,1,0,1,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "eqSymm" (formula "7"))
                                                         (rule "applyEq" (formula "15") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "10") (term "0,1,0,1,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "6") (term "1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "7"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "7"))
                                                         (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "7"))
                                                         (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "7"))
                                                         (rule "add_zero_right" (formula "10") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "7"))
                                                         (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                         (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_head_0"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                         (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "20") (ifseqformula "7"))
                                                      )
                                                      (branch
                                                         (rule "notRight" (formula "13"))
                                                         (rule "close" (formula "13") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "notRight" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1,0,0"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "14") (term "1,1"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0,1"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                      (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "apply_eq_monomials" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "apply_eq_monomials" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedList_tail_0"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                      (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                                      (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "14") (term "0,1,0,0,0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "15"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEq" (formula "16") (term "0,0,0,1,0,1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "13"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0,1,0,1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "7") (term "1") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0,1,0,1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                      (rule "leq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "15") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                      (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=LinkedList_head_0"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                      (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "21") (ifseqformula "8"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "13") (term "1,1"))
                                                   (rule "eqSymm" (formula "9"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                   (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "19") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                   (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_head_0"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                   (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "12") (term "0,1,0,0,0,0,1") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "notLeft" (formula "12"))
                                                   (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1"))
                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                                                   (rule "pullOutSelect" (formula "24") (term "1,0") (inst "selectSK=LinkedList_tail_0"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                   (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=Node_next_0"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                   (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "25") (ifseqformula "13"))
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,1"))
                                                (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "castedGetAny" (formula "21") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "apply_eq_monomials" (formula "11") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "apply_eq_monomials" (formula "15") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "19") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_head_0"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "6"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                                (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                                                (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                                (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                                (rule "close" (formula "25") (ifseqformula "14"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "12"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,1"))
                                             (rule "eqSymm" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "12") (term "1,1,0,1") (ifseqformula "6"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "12") (term "1,1,0,1,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "pullOutSelect" (formula "20") (term "1") (inst "selectSK=LinkedList_tail_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                             (rule "pullOutSelect" (formula "21") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                             (rule "applyEq" (formula "21") (term "0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                             (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                             (rule "simplifySelectOfStore" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "0"))
                                             (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "22") (term "0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "23") (term "0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0,1,1,1,0,0,1") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "19") (term "1,1,1,0,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "7"))
                                             (rule "replace_known_right" (formula "12") (term "1,1") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "21") (term "1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "5") (term "1") (ifseqformula "12"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,1,0,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "20") (term "0,0,1,0,1") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "eqSymm" (formula "6"))
                                             (rule "close" (formula "20") (ifseqformula "6"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "13") (term "1,1"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                             (rule "castedGetAny" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "12") (term "1,1,0,1,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_head_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                             (rule "pullOutSelect" (formula "21") (term "1") (inst "selectSK=LinkedList_tail_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                             (rule "pullOutSelect" (formula "22") (term "1,0,0") (inst "selectSK=LinkedListIterator_list_0"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "23") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                             (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                             (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "25") (term "0,1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "7"))
                                             (rule "close" (formula "24") (ifseqformula "14"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "13"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "13"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "13"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "13"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "13"))
                                                   (branch "Case 1"
                                                      (rule "notRight" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1,0,0"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "14") (term "1,1"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0,1"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                      (rule "applyEq" (formula "14") (term "1,1,0,1,1") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "apply_eq_monomials" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedList_nodeList_0"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                      (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                                      (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_left" (formula "14") (term "0,0,0,0,0,0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0,1,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "17") (term "0,1,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0,0,0,1,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "7") (term "1") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0,1,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                      (rule "leq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "10") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "8"))
                                                      (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                      (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=LinkedList_tail_0"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                      (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "21") (ifseqformula "14"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "notRight" (formula "13"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1,0,0"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "14") (term "1,1"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0,1"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                      (rule "applyEq" (formula "14") (term "1,1,0,1,1") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "7") (term "1,0,1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "apply_eq_monomials" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=LinkedList_head_0"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                      (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                                      (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=LinkedList_tail_0"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                      (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                      (rule "simplifySelectOfStore" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "castDel" (formula "2") (term "0"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "21")))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "close" (formula "20") (ifseqformula "8"))
                                                   )
                                                )
                                                (branch
                                                   (rule "notRight" (formula "13"))
                                                   (rule "close" (formula "13") (ifseqformula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "13") (term "1,1"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "1,0"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "12") (term "1,1,0,1") (ifseqformula "6"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_tail_0"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                                (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=Node_next_0"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "19"))
                                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                                                (rule "closeFalse" (formula "12"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,1"))
                                             (rule "eqSymm" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "castedGetAny" (formula "21") (term "0"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "21") (term "0,0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "19") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                             (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_tail_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                             (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "19") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1"))
                                             (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=LinkedList_head_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                             (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                             (rule "close" (formula "25") (ifseqformula "7"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "13") (term "1,1"))
                                          (rule "eqSymm" (formula "13") (term "1,0,1"))
                                          (rule "eqSymm" (formula "9"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "21") (term "1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                          (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                          (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "13") (term "0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "20") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "0"))
                                          (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,1,1") (ifseqformula "8"))
                                          (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedList_tail_0"))
                                          (rule "applyEq" (formula "21") (term "1") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                          (rule "pullOutSelect" (formula "21") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                                          (rule "applyEq" (formula "22") (term "0,1,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                          (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                          (rule "simplifySelectOfStore" (formula "2"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "23") (term "0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0,1,1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "7"))
                                          (rule "close" (formula "24") (ifseqformula "14"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "allRight" (formula "20") (inst "sk=i_1_0"))
                                 (rule "impRight" (formula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,1"))
                                 (rule "eqSymm" (formula "15") (term "1,0,1"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "1"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1"))
                                 (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "15") (term "0,1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,0"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "1,0,1,1"))
                                 (rule "castedGetAny" (formula "15") (term "0,1,1"))
                                 (rule "castedGetAny" (formula "22") (term "1,0"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "1,0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "1,0,1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "1,0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1"))
                                 (rule "castedGetAny" (formula "22") (term "0"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "1,0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "1,0,1"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "22") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "15") (term "1,1,0,1,1") (ifseqformula "10"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "21") (term "1,0,1") (inst "selectSK=LinkedListIterator_list_0"))
                                 (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "22") (term "1,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=LinkedList_nodeList_0"))
                                 (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                                 (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=Node_next_0"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_and" (formula "13") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "13") (term "1,0,1,0"))
                                 (rule "commute_and" (formula "14") (term "0,0,1,0"))
                                 (rule "commute_and" (formula "14") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "commute_or" (formula "19") (term "0,0"))
                                 (rule "cut_direct" (formula "7") (term "0"))
                                 (branch "CUT: head = null TRUE"
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "7")))
                                    (rule "andLeft" (formula "15"))
                                    (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "17"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "18") (term "0,0,0,0,1,0,1,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,0,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,1,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "applyEq" (formula "19") (term "0,1,1,0,0,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "13") (term "0,1,1,1,0,1,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "18") (term "1,1,0,0,1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "10"))
                                    (rule "add_zero_right" (formula "16") (term "1,1,0"))
                                    (rule "applyEq" (formula "11") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: head = null FALSE"
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "16") (term "1,0,1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "21") (inst "iv=iv"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1") (ifseqformula "10"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
                                    (rule "nnf_imp2or" (formula "21") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,1"))
                                    (rule "lenNonNegative" (formula "10") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "10"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                    (rule "lenNonNegative" (formula "12") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "shift_paren_or" (formula "20") (term "0,1,0"))
                                    (rule "applyEq_and_gen2" (formula "15") (term "1,0,1,0"))
                                    (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                                    (rule "shift_paren_and" (formula "14") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "1,0,1,1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "14") (term "0"))
                                    (rule "distr_forallAnd" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "cnf_rightDist" (formula "14") (term "0"))
                                    (rule "distr_forallAnd" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "cnf_rightDist" (formula "14") (term "0"))
                                    (rule "distr_forallAnd" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "commute_or" (formula "23") (term "0,0,0,1,0"))
                                    (rule "shift_paren_and" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "castedGetAny" (formula "18") (term "1,0,1,1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,1,0"))
                                    (rule "cnf_rightDist" (formula "18") (term "0"))
                                    (rule "distr_forallAnd" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "shift_paren_or" (formula "19") (term "0"))
                                    (rule "cnf_rightDist" (formula "18") (term "0"))
                                    (rule "distr_forallAnd" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "shift_paren_or" (formula "19") (term "0"))
                                    (rule "cnf_rightDist" (formula "18") (term "0"))
                                    (rule "distr_forallAnd" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "shift_paren_or" (formula "19") (term "0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "34") (term "1"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "34") (term "1,0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                                    (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "25"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "andLeft" (formula "8"))
                              (rule "allRight" (formula "20") (inst "sk=i_0_0"))
                              (rule "impRight" (formula "20"))
                              (rule "andLeft" (formula "1"))
                              (rule "allRight" (formula "22") (inst "sk=j_0"))
                              (rule "impRight" (formula "22"))
                              (rule "impRight" (formula "23"))
                              (rule "andLeft" (formula "2"))
                              (rule "eqSymm" (formula "20") (term "0,1,0,1,0"))
                              (rule "eqSymm" (formula "20") (term "1,1,0,1,0"))
                              (rule "eqSymm" (formula "19") (term "1,0"))
                              (rule "eqSymm" (formula "18") (term "1,1"))
                              (rule "eqSymm" (formula "18") (term "1,0,1"))
                              (rule "eqSymm" (formula "14"))
                              (rule "eqSymm" (formula "1"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,1"))
                              (rule "mul_literals" (formula "18") (term "1,1,0,0,1,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,1"))
                              (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "castedGetAny" (formula "20") (term "0,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "20") (term "1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                              (rule "castedGetAny" (formula "18") (term "0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "19") (term "0,1,0"))
                              (rule "eqSymm" (formula "19") (term "1,0"))
                              (rule "castedGetAny" (formula "18") (term "0,1,1"))
                              (rule "dismissNonSelectedField" (formula "5") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "5") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "3") (term "1,0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                              (rule "dismissNonSelectedField" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,1") (ifseqformula "12"))
                              (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "12"))
                              (rule "applyEq" (formula "11") (term "1,0,1") (ifseqformula "12"))
                              (rule "applyEq" (formula "18") (term "1,1,0,1,1") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "13") (term "1") (ifseqformula "12"))
                              (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=LinkedList_nodeList_0"))
                              (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=LinkedListIterator_list_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "5") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "7") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "15"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "nnf_imp2or" (formula "21") (term "1,0,1,0"))
                              (rule "nnf_imp2or" (formula "20") (term "0"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_imp2or" (formula "18") (term "0"))
                              (rule "nnf_imp2or" (formula "22") (term "0"))
                              (rule "nnf_imp2or" (formula "21") (term "0"))
                              (rule "nnf_notAnd" (formula "20") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "21") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "commute_or_2" (formula "21") (term "0"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "commute_and" (formula "17") (term "0,0,1,0"))
                              (rule "commute_and" (formula "17") (term "1,0,1,0"))
                              (rule "commute_and" (formula "18") (term "1,0,1,0"))
                              (rule "commute_and" (formula "18") (term "0,0,1,0"))
                              (rule "cut_direct" (formula "11") (term "0"))
                              (branch "CUT: head = null TRUE"
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "replace_known_left" (formula "20") (term "1,0,1") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_left" (formula "19") (term "0,1,0,0,0,1") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "11")))
                                 (rule "andLeft" (formula "19"))
                                 (rule "replace_known_left" (formula "21") (term "1,1") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "22") (term "0,0,0,0,1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "19"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,1,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "21") (term "0,1,1,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "13") (term "1") (ifseqformula "11"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "18"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "applyEq" (formula "20") (term "1,1,1,0") (ifseqformula "14"))
                                 (rule "add_zero_right" (formula "20") (term "1,1,0"))
                                 (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "21") (term "1,1,0,0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: head = null FALSE"
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "20") (term "1,0,1") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1") (ifseqformula "14"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                 (rule "nnf_imp2or" (formula "25") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1"))
                                 (rule "commute_or" (formula "22") (term "0,0"))
                                 (rule "commute_or" (formula "24") (term "0,0"))
                                 (rule "lenNonNegative" (formula "14") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                 (rule "lenNonNegative" (formula "16") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                 (rule "shift_paren_or" (formula "24") (term "0,1,0"))
                                 (rule "applyEq_and_gen2" (formula "19") (term "1,0,1,0"))
                                 (rule "commute_or_2" (formula "24") (term "0,0,1,0"))
                                 (rule "shift_paren_and" (formula "18") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "castedGetAny" (formula "18") (term "1,0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "1,0,1,1,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "18") (term "0"))
                                 (rule "distr_forallAnd" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "shift_paren_or" (formula "19") (term "0"))
                                 (rule "cnf_rightDist" (formula "18") (term "0"))
                                 (rule "distr_forallAnd" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "shift_paren_or" (formula "19") (term "0"))
                                 (rule "cnf_rightDist" (formula "18") (term "0"))
                                 (rule "distr_forallAnd" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "shift_paren_or" (formula "19") (term "0"))
                                 (rule "commute_or" (formula "18") (term "0,0"))
                                 (rule "commute_or" (formula "27") (term "0,0,0,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "castedGetAny" (formula "22") (term "0,0,0,0,0,1,0"))
                                 (rule "castedGetAny" (formula "22") (term "1,0,1,1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "22") (term "0,0,1,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0"))
                                 (rule "distr_forallAnd" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "shift_paren_or" (formula "23") (term "0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0"))
                                 (rule "distr_forallAnd" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "shift_paren_or" (formula "23") (term "0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0"))
                                 (rule "distr_forallAnd" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "shift_paren_or" (formula "23") (term "0"))
                                 (rule "commute_or" (formula "22") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "1"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "all_pull_out3" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "30") (term "0,0"))
                                 (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "30") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
                                 (rule "commute_or" (formula "30") (term "0,0,0,0,0,0"))
                                 (rule "seqGetAlphaCast" (formula "28") (term "0"))
                                 (rule "castedGetAny" (formula "28") (term "0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "allLeft" (formula "30") (inst "t=i_0_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "seqGetAlphaCast" (formula "27") (term "0"))
                                 (rule "castedGetAny" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "allLeft" (formula "32") (inst "t=i_0_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                 (rule "leq_literals" (formula "32") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "32") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                 (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                 (rule "leq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "allLeft" (formula "20") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "allLeft" (formula "18") (inst "t=i_0_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "allLeft" (formula "18") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                 (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "cut_direct" (formula "37") (term "0"))
                                 (branch "CUT: l.size = 0 TRUE"
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "allRight" (formula "38") (inst "sk=iv_0"))
                                    (rule "orRight" (formula "38"))
                                    (rule "orRight" (formula "38"))
                                    (rule "inEqSimp_leqRight" (formula "38"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "3"))
                                    (rule "add_zero_right" (formula "30") (term "1,0"))
                                    (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,0,0,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "3"))
                                    (rule "add_literals" (formula "31") (term "1,1,0"))
                                    (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0"))
                                    (rule "add_zero_right" (formula "10") (term "0"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "18") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "CUT: l.size = 0 FALSE"
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "false_right" (formula "38"))
                                    (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "37"))
                                    (rule "add_zero_right" (formula "14") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "allLeft" (formula "30") (inst "t=j_0"))
                                    (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                    (rule "leq_literals" (formula "30") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "30"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0,0"))
                           (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1,0,0"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "allRight" (formula "20") (inst "sk=i_0"))
                           (rule "impRight" (formula "20"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "16") (term "1,0"))
                           (rule "eqSymm" (formula "15") (term "1,1"))
                           (rule "eqSymm" (formula "15") (term "1,0,1"))
                           (rule "eqSymm" (formula "11"))
                           (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1"))
                           (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1"))
                           (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                           (rule "eqSymm" (formula "22"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                           (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                           (rule "castedGetAny" (formula "15") (term "0,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "castedGetAny" (formula "16") (term "0,1,0"))
                           (rule "eqSymm" (formula "16") (term "1,0"))
                           (rule "castedGetAny" (formula "15") (term "0,1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,1"))
                           (rule "castedGetAny" (formula "22") (term "1,0"))
                           (rule "eqSymm" (formula "22"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,0"))
                           (rule "dismissNonSelectedField" (formula "2") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "applyEq" (formula "15") (term "1,1,0,1,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "15") (term "1,1,0,1") (ifseqformula "9"))
                           (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                           (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "9"))
                           (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "21") (term "0,0") (inst "selectSK=LinkedList_values_1"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "pullOutSelect" (formula "22") (term "1,0,1,1") (inst "selectSK=LinkedListIterator_list_0"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "23") (term "1,0,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                           (rule "pullOutSelect" (formula "21") (term "0,1,1") (inst "selectSK=LinkedList_nodeList_0"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "applyEqReverse" (formula "22") (term "0,1,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "21") (term "1") (inst "selectSK=Node_value_0"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                           (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "nnf_imp2or" (formula "17") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "13") (term "0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "18") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "nnf_notAnd" (formula "18") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "commute_and" (formula "13") (term "0,0,1,0"))
                           (rule "commute_and" (formula "13") (term "1,0,1,0"))
                           (rule "commute_and" (formula "14") (term "1,0,1,0"))
                           (rule "commute_and" (formula "14") (term "0,0,1,0"))
                           (rule "commute_or" (formula "17") (term "0,0"))
                           (rule "commute_or" (formula "19") (term "0,0"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "cut_direct" (formula "7") (term "0"))
                           (branch "CUT: head = null TRUE"
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "replace_known_left" (formula "15") (term "0,1,0,0,0,1") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "7")))
                              (rule "andLeft" (formula "15"))
                              (rule "replace_known_left" (formula "17") (term "1,1") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")))
                              (rule "true_left" (formula "17"))
                              (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "eqSymm" (formula "10"))
                              (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "7"))
                              (rule "applyEq" (formula "19") (term "0,1,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "13") (term "0,1,1,1,0,1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "18") (term "0,0,0,0,1,0,1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "15"))
                              (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "10"))
                              (rule "add_zero_right" (formula "17") (term "1,1,0"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
                              (rule "leq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "applyEq" (formula "17") (term "1,1,0,0,1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "10"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                              (rule "leq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: head = null FALSE"
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_right" (formula "15") (term "0,1,0,0,0,1") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "16"))
                              (rule "notLeft" (formula "15"))
                              (rule "replace_known_right" (formula "17") (term "1,1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                              (rule "true_left" (formula "18"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "21") (inst "iv=iv"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1") (ifseqformula "10"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
                              (rule "nnf_imp2or" (formula "21") (term "0,1"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
                              (rule "lenNonNegative" (formula "10") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                              (rule "lenNonNegative" (formula "12") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "12"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                              (rule "shift_paren_or" (formula "20") (term "0,1,0"))
                              (rule "applyEq_and_gen2" (formula "15") (term "1,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                              (rule "shift_paren_and" (formula "14") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "castedGetAny" (formula "14") (term "0,0,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                              (rule "castedGetAny" (formula "14") (term "1,0,1,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "14") (term "1,0,0,1,0,1,0"))
                              (rule "cnf_rightDist" (formula "14") (term "0"))
                              (rule "distr_forallAnd" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "shift_paren_or" (formula "15") (term "0"))
                              (rule "cnf_rightDist" (formula "14") (term "0"))
                              (rule "distr_forallAnd" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "shift_paren_or" (formula "15") (term "0"))
                              (rule "cnf_rightDist" (formula "14") (term "0"))
                              (rule "distr_forallAnd" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "shift_paren_or" (formula "15") (term "0"))
                              (rule "commute_or" (formula "14") (term "0,0"))
                              (rule "commute_or" (formula "23") (term "0,0,0,1,0"))
                              (rule "shift_paren_and" (formula "18") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "castedGetAny" (formula "18") (term "1,0,1,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "18") (term "0,0,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "18") (term "0,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "18") (term "0"))
                              (rule "distr_forallAnd" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "shift_paren_or" (formula "19") (term "0"))
                              (rule "cnf_rightDist" (formula "18") (term "0"))
                              (rule "distr_forallAnd" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "shift_paren_or" (formula "19") (term "0"))
                              (rule "cnf_rightDist" (formula "18") (term "0"))
                              (rule "distr_forallAnd" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "commute_or_2" (formula "18") (term "0"))
                              (rule "shift_paren_or" (formula "19") (term "0"))
                              (rule "commute_or" (formula "18") (term "0,0"))
                              (rule "seqGetAlphaCast" (formula "34") (term "0"))
                              (rule "castDel" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "34") (term "1,1"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "allLeft" (formula "27") (inst "t=i_0"))
                              (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "35"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "27") (term "0,0"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "27"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,1,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0"))
                              (rule "add_zero_right" (formula "27") (term "0"))
                              (rule "leq_literals" (formula "27"))
                              (rule "closeFalse" (formula "27"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "12") (inst "sk=f_0"))
            (rule "allRight" (formula "12") (inst "sk=o_0"))
            (rule "orRight" (formula "12"))
            (rule "eqSymm" (formula "13"))
            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
            (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
            (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "13"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "commute_and" (formula "7") (term "0,0"))
            (rule "commute_and" (formula "6") (term "0,0"))
            (rule "commute_and" (formula "5") (term "0,0"))
            (rule "commute_and" (formula "4") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "ifthenelse_split" (formula "1") (term "0"))
            (branch "f_0 = java.lang.Object::<created> & o_0 = l_2 TRUE"
               (rule "andLeft" (formula "1"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "19") (term "1,0,0,1") (ifseqformula "2"))
               (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "notRight" (formula "19"))
               (rule "applyEqRigid" (formula "20") (term "2,0") (ifseqformula "2"))
               (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "11"))
               (rule "eqSymm" (formula "20"))
               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
               (rule "hideAuxiliaryEq" (formula "6"))
               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
               (rule "hideAuxiliaryEq" (formula "6"))
               (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "eqSymm" (formula "14"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
               (rule "eqSymm" (formula "3"))
               (rule "close" (formula "12") (ifseqformula "3"))
            )
            (branch "f_0 = java.lang.Object::<created> & o_0 = l_2 FALSE"
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "f_0 = LinkedListIterator::$list & o_0 = l_2 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "1"))
                  (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "9"))
                  (rule "eqSymm" (formula "20"))
                  (rule "applyEq" (formula "19") (term "1,0,0,1") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "notRight" (formula "19"))
                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "eqSymm" (formula "15"))
                  (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "false_right" (formula "11"))
                  (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "3"))
                  (rule "close" (formula "12") (ifseqformula "3"))
               )
               (branch "f_0 = LinkedListIterator::$list & o_0 = l_2 FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_0 = LinkedListIterator::$curr & o_0 = l_2 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "applyEqRigid" (formula "20") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "8"))
                     (rule "eqSymm" (formula "20"))
                     (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "notRight" (formula "19"))
                     (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "false_right" (formula "11"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "false_right" (formula "11"))
                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "11") (ifseqformula "1"))
                  )
                  (branch "f_0 = LinkedListIterator::$curr & o_0 = l_2 FALSE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_0 = LinkedListIterator::$index & o_0 = l_2 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "20"))
                        (rule "applyEq" (formula "19") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "notRight" (formula "19"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "false_right" (formula "13"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "close" (formula "12") (ifseqformula "3"))
                     )
                     (branch "f_0 = LinkedListIterator::$index & o_0 = l_2 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = LinkedListIterator::$seen & o_0 = l_2 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "applyEqRigid" (formula "20") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "6"))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEq" (formula "19") (term "1,0,0,1") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "notRight" (formula "19"))
                           (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "18"))
                           (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "false_right" (formula "12"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "false_right" (formula "12"))
                           (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "false_right" (formula "12"))
                           (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "false_right" (formula "11"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3"))
                           (rule "close" (formula "12") (ifseqformula "3"))
                        )
                        (branch "f_0 = LinkedListIterator::$seen & o_0 = l_2 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "cut_direct" (formula "6") (term "0"))
                           (branch "CUT: head = null TRUE"
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "applyEq" (formula "8") (term "1") (ifseqformula "6"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = LinkedListIterator::$to_see & o_0 = l_2 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "20") (term "0") (ifseqformula "5"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notRight" (formula "19"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "false_right" (formula "12"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "false_right" (formula "11"))
                                 (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "11") (ifseqformula "1"))
                              )
                              (branch "f_0 = LinkedListIterator::$to_see & o_0 = l_2 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "cut_direct" (formula "14") (term "1"))
                                 (branch "CUT: o_0 = l_2 TRUE"
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "notRight" (formula "19"))
                                    (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "17") (ifseqformula "1"))
                                 )
                                 (branch "CUT: o_0 = l_2 FALSE"
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "false_right" (formula "15"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "CUT: head = null FALSE"
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = LinkedListIterator::$to_see & o_0 = l_2 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "applyEq" (formula "21") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "21") (term "0") (ifseqformula "5"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "notRight" (formula "20"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "false_right" (formula "12"))
                                 (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "false_right" (formula "12"))
                                 (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "false_right" (formula "12"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "12") (ifseqformula "1"))
                              )
                              (branch "f_0 = LinkedListIterator::$to_see & o_0 = l_2 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "cut_direct" (formula "15") (term "1"))
                                 (branch "CUT: o_0 = l_2 TRUE"
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "notRight" (formula "20"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "18") (ifseqformula "1"))
                                 )
                                 (branch "CUT: o_0 = l_2 FALSE"
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "false_right" (formula "16"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Null Reference (self_25 = null)"
         (rule "false_right" (formula "13"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (l_3 = null)"
      (rule "false_right" (formula "13"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (var = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
   (rule "closeFalse" (formula "1"))
)
)
}
