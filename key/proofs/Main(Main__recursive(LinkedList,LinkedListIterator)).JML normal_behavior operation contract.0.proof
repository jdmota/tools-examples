\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jun 15 16:37:14 BST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=1000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "..";

\proofObligation "#Proof Obligation Settings
#Wed Jun 15 16:37:14 BST 2022
contract=Main[Main\\:\\:recursive(LinkedList,LinkedListIterator)].JML normal_behavior operation contract.0
name=Main[Main\\:\\:recursive(LinkedList,LinkedListIterator)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "1" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "2" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "3" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "4" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "5" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "6" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "7" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "8" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "9" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "10" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "11" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "12" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "13" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "14" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "15" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "16" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "17" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "18" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "19" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "20" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "21" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "22" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "23" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "24" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "25" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "26" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "27" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "28" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "29" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "30" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "31" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "32" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "33" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "34" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "35" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "36" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "37" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "38" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "39" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "40" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "41" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "42" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))
(keyLog "43" (keyUser "JOTA" ) (keyVersion "666bcb0c95"))

(autoModeTime "164946")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "assignment" (formula "14") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "14") (term "1,1") (newnames "heapBefore_recursive,savedHeapBefore_recursive") (userinteraction))
(rule "ifUnfold" (formula "14") (term "1,1,1") (inst "#boolv=x") (userinteraction))
(rule "variableDeclaration" (formula "14") (term "1,1,1") (newnames "x") (userinteraction))
 (builtin "One Step Simplification" (formula "14"))
 (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_hasNext,result_21,exc_25") (contract "LinkedListIterator[LinkedListIterator::hasNext()].JML normal_behavior operation contract.0"))
(branch "Post (hasNext)"
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "5")))
   (rule "andLeft" (formula "12") (userinteraction))
   (rule "andLeft" (formula "13") (userinteraction))
   (rule "assignment" (formula "16") (term "1") (userinteraction))
   (rule "if" (formula "16") (term "1,1") (userinteraction))
   (rule "variableDeclarationAssign" (formula "16") (term "1,1,1") (userinteraction))
   (rule "variableDeclaration" (formula "16") (term "1,1,1") (newnames "f") (userinteraction))
    (builtin "One Step Simplification" (formula "16"))
   (rule "ifthenelse_split_for" (formula "16") (userinteraction))
   (branch "result_21 = TRUE TRUE"
       (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_next,result_22,exc_26,heapAfter_next,anon_heap_next") (contract "LinkedListIterator[LinkedListIterator::next()].JML normal_behavior operation contract.0"))
      (branch "Post (next)"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "ifthenelse_split" (formula "14") (term "1") (userinteraction))
         (branch "it.to_see.length > 0 TRUE"
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "24"))
            (rule "assignment" (formula "27") (term "1") (userinteraction))
             (builtin "One Step Simplification" (formula "27"))
             (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_use,exc_27,heapAfter_use,anon_heap_use") (contract "Main[Main::use(FileReader)].JML normal_behavior operation contract.0"))
            (branch "Post (use)"
                (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
                (builtin "One Step Simplification" (formula "32"))
                (builtin "Use Operation Contract" (formula "32") (newnames "heapBefore_recursive_0,exc_28,heapAfter_recursive,anon_heap_recursive") (contract "Main[Main::recursive(LinkedList,LinkedListIterator)].JML normal_behavior operation contract.0"))
               (branch "Post (recursive)"
                   (builtin "One Step Simplification" (formula "30"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "methodCallEmpty" (formula "34") (term "1") (userinteraction))
                  (rule "tryEmpty" (formula "34") (term "1") (userinteraction))
                  (rule "emptyModality" (formula "34") (term "1") (userinteraction))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "replace_known_left" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "32") (userinteraction))
                  (rule "replace_known_left" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "33") (userinteraction))
                  (rule "replace_known_left" (formula "41") (term "1,0,0,0,0") (ifseqformula "34") (userinteraction))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                  (rule "pullOut" (formula "41") (term "1,2,0,0,0,0") (inst "sk=infiniteUnion_0") (userinteraction))
                  (rule "allRight" (formula "42") (inst "sk=f_0") (userinteraction))
                  (rule "allRight" (formula "42") (inst "sk=o_0") (userinteraction))
                  (rule "orRight" (formula "42") (userinteraction))
                  (rule "orRight" (formula "42") (userinteraction))
                  (rule "elementOfUnion" (formula "42") (userinteraction))
                  (rule "orRight" (formula "42") (userinteraction))
                  (rule "selectOfAnonEQ" (formula "45") (term "0") (ifseqformula "31") (userinteraction))
                  (rule "selectOfAnonEQ" (formula "45") (term "2,0") (ifseqformula "26") (userinteraction))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "selectOfAnonEQ" (formula "45") (term "2,2,0") (ifseqformula "17") (userinteraction))
                  (rule "replace_known_right" (formula "45") (term "0,0,0,2,2,0") (ifseqformula "42") (userinteraction))
                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "44")))
                  (rule "selectCreatedOfAnonEQ" (formula "45") (term "0,0,1,1,0,2,0") (ifseqformula "17") (userinteraction))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "elementOfUnion" (formula "45") (term "0,0,0,0") (userinteraction))
                  (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "45") (term "2,0,0,0,0,0") (userinteraction))
                  (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "42") (term "2") (userinteraction))
                  (rule "replace_known_right" (formula "45") (term "0,0,0,0,0") (ifseqformula "42") (userinteraction))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "cut" (inst "cutFormula=(  Seq::select(heapAfter_next,
               it,
               LinkedListIterator::$to_see)
 = Seq::select(heapAfter_use,
               it,
               LinkedListIterator::$to_see))<<origin(\"User_Interaction @ node 1127 (cut)\",\"[]\")>>") (userinteraction))
                  (branch "CUT: it.to_see@heapAfter_next = it.to_see@heapAfter_use TRUE"
                     (rule "applyEqReverse" (formula "46") (term "0,0,1,1,0,2,0,0,0,0") (ifseqformula "1") (userinteraction))
                     (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0,2,0,0,0,0") (ifseqformula "1") (userinteraction))
                     (rule "cut" (inst "cutFormula=(  elementOf(o_0, f_0, infiniteUnion_0)<<origin(\"User_Interaction @ node 2285 (cut)\",\"[]\")>>
 | (!elementOf(o_0, f_0, infiniteUnion_0)<<origin(\"User_Interaction @ node 2285 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 2285 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 2285 (cut)\",\"[]\")>>") (userinteraction))
                     (branch "CUT: (o_0, f_0) in infiniteUnion_0 | !(o_0, f_0) in infiniteUnion_0 TRUE"
                        (rule "orLeft" (formula "1") (userinteraction))
                        (branch "(o_0, f_0) in infiniteUnion_0"
                           (rule "close" (formula "45") (ifseqformula "1") (userinteraction))
                        )
                        (branch "!(o_0, f_0) in infiniteUnion_0"
                           (rule "elementOfInfiniteUnionEQ" (formula "1") (term "0") (ifseqformula "3") (userinteraction))
                           (rule "nnf_notEx" (formula "1") (userinteraction))
                           (rule "elementOfInfiniteUnion" (formula "47") (term "0,0,0,0") (userinteraction))
                           (rule "applyEq" (formula "47") (term "0,1,1,0,2,0,0,0,0,0") (ifseqformula "23") (userinteraction))
                           (rule "applyEq" (formula "47") (term "0,0,1,1,2,0,0,0,0,0") (ifseqformula "23") (userinteraction))
                           (rule "lenOfSeqSub" (formula "47") (term "1,1,0,2,0,0,0,0,0") (userinteraction))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "cut_direct" (formula "47") (term "0,0,0,0") (userinteraction))
                           (branch "CUT: exists int i; ( 0 <= i & i < if (1 < it.to_see.length) then (it.to_see.length - 1) else (0) & (o_0, f_0) in (FileReader)(seqSub(it.to_see, 1, it.to_see.length)[i]).footprint @heapAfter_use) TRUE"
                              (rule "exLeft" (formula "1") (inst "sk=i_0") (userinteraction))
                              (rule "andLeft" (formula "1") (userinteraction))
                              (rule "andLeft" (formula "1") (userinteraction))
                              (rule "ifthenelse_split" (formula "2") (term "1") (userinteraction))
                              (branch "1 < it.to_see.length TRUE"
                                 (rule "getOfSeqSub" (formula "4") (term "0,1,2") (userinteraction))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,1,2") (ifseqformula "1") (userinteraction))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0,1,2") (ifseqformula "3") (userinteraction))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "JML_represents_clause_for_FileReader_footprint" (formula "4") (term "2") (userinteraction))
                                 (rule "elementOfUnion" (formula "4") (userinteraction))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "allLeft" (formula "5") (inst "t=add(i_0, Z(1(#)))") (userinteraction))
                                 (rule "notLeft" (formula "5") (userinteraction))
                                 (rule "JML_represents_clause_for_FileReader_footprint" (formula "45") (term "2,1") (userinteraction))
                                 (rule "elementOfUnion" (formula "45") (term "1") (userinteraction))
                                 (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "4") (userinteraction))
                                  (builtin "One Step Simplification" (formula "45"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,1,0,0") (ifseqformula "32"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,1,0,0") (ifseqformula "23"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0,0,1,0") (ifseqformula "32"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,0,0,1,0") (ifseqformula "23"))
                                 (rule "eqSymm" (formula "20") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "20") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "eqSymm" (formula "43") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "43") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "eqSymm" (formula "19") (term "0,1,0,1,0"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "45") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "1,0,0,2,1"))
                                 (rule "polySimp_addComm0" (formula "45") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "1,0,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1"))
                                 (rule "castedGetAny" (formula "37") (term "1,1,0,1,1,0"))
                                 (rule "castedGetAny" (formula "5") (term "1,2,1,0,0"))
                                 (rule "castedGetAny" (formula "7") (term "1,1,0,0"))
                                 (rule "castedGetAny" (formula "20") (term "0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "20") (term "1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "28") (term "0"))
                                 (rule "castedGetAny" (formula "43") (term "0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "43") (term "1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "19") (term "0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "19") (term "1,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "8"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "4") (term "0,2,1"))
                                 (rule "elementOfSingleton" (formula "4") (term "0"))
                                 (rule "eqSymm" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "elementOfSingleton" (formula "4") (term "1"))
                                 (rule "eqSymm" (formula "4") (term "0,1"))
                                 (rule "castedGetAny" (formula "4") (term "0,0,0"))
                                 (rule "elementOfInfiniteUnionEQ" (formula "50") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "inEqSimp_leqRight" (formula "45"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "30") (term "1") (ifseqformula "17"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "1 < it.to_see.length FALSE"
                                  (builtin "One Step Simplification" (formula "4"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "22"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,1,0,0") (ifseqformula "31"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,1,1,0,0") (ifseqformula "22"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,0,0,0,1,0") (ifseqformula "36"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,0,0,0,1,0") (ifseqformula "31"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,1,0,0,0,1,0") (ifseqformula "22"))
                                 (rule "eqSymm" (formula "18") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "42") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "eqSymm" (formula "19") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "42") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "18") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "castedGetAny" (formula "6") (term "1,1,0,0"))
                                 (rule "castedGetAny" (formula "3") (term "1,2"))
                                 (rule "castedGetAny" (formula "36") (term "1,1,0,1,1,0"))
                                 (rule "castedGetAny" (formula "4") (term "1,2,1,0,0"))
                                 (rule "castedGetAny" (formula "42") (term "1,0,1,0,1,0"))
                                 (rule "inEqSimp_ltRight" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "43") (term "0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "28") (term "0"))
                                 (rule "castedGetAny" (formula "20") (term "0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "20") (term "1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "19") (term "1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "19") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0"))
                                 (rule "elementOfInfiniteUnionEQ" (formula "49") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "16"))
                                 (rule "applyEq" (formula "4") (term "0,1,2") (ifseqformula "27"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "CUT: exists int i; ( 0 <= i & i < if (1 < it.to_see.length) then (it.to_see.length - 1) else (0) & (o_0, f_0) in (FileReader)(seqSub(it.to_see, 1, it.to_see.length)[i]).footprint @heapAfter_use) FALSE"
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "28") (userinteraction))
                              (rule "JML_represents_clause_for_FileReader_footprint" (formula "48") (term "2,0,0,0,2,0") (userinteraction))
                              (rule "elementOfUnion" (formula "48") (term "0,0,0,2,0") (userinteraction))
                              (rule "ifthenelse_split" (formula "48") (term "0") (userinteraction))
                              (branch " !o_0 = null & !( o_0.<created>@heapAfter_next = TRUE | o_0.<created>@anon_heap_use<<anonHeapFunction>> = TRUE) TRUE"
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1") (ifseqformula "20"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0,0,0,1,0") (ifseqformula "34"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0,0,1,0") (ifseqformula "29"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,1,0,0,0,1,0") (ifseqformula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "41"))
                                 (rule "orRight" (formula "41"))
                                 (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "39") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "39") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "41")))
                                 (rule "closeTrue" (formula "50"))
                              )
                              (branch " !o_0 = null & !( o_0.<created>@heapAfter_next = TRUE | o_0.<created>@anon_heap_use<<anonHeapFunction>> = TRUE) FALSE"
                                 (rule "ifthenelse_split" (formula "49") (term "0") (userinteraction))
                                 (branch " ( (o_0, f_0) in {(result_22, FileReader::$state)} | (o_0, f_0) in {(result_22, FileReader::$remaining)}) & !f_0 = java.lang.Object::<created> | !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_next<<anonHeapFunction>> = TRUE) TRUE"
                                    (rule "hide_right" (formula "50") (userinteraction))
                                    (rule "selectCreatedOfAnonEQ" (formula "49") (term "0,0,0,1") (ifseqformula "20") (userinteraction))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "orLeft" (formula "1") (userinteraction))
                                    (branch " ( (o_0, f_0) in {(result_22, FileReader::$state)} | (o_0, f_0) in {(result_22, FileReader::$remaining)}) & !f_0 = java.lang.Object::<created>"
                                       (rule "andLeft" (formula "1") (userinteraction))
                                       (rule "hide_right" (formula "50") (userinteraction))
                                       (rule "hide_right" (formula "49") (userinteraction))
                                       (rule "hide_right" (formula "48") (userinteraction))
                                       (rule "hide_right" (formula "46") (userinteraction))
                                       (rule "elementOfInfiniteUnionEQ" (formula "46") (ifseqformula "5") (userinteraction))
                                       (rule "exRight" (formula "46") (inst "t=Z(0(#))") (userinteraction))
                                       (rule "hide_right" (formula "47") (userinteraction))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "leq_literals" (formula "46") (term "0,0") (userinteraction))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "andRight" (formula "46") (userinteraction))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0,0,0,1,0") (ifseqformula "35"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,0,0,1,0") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "40") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "40") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "castedGetAny" (formula "34") (term "1,1,0,1,1,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0"))
                                          (rule "elementOfSingleton" (formula "1") (term "1"))
                                          (rule "castedGetAny" (formula "4") (term "1,1,0,0"))
                                          (rule "castedGetAny" (formula "2") (term "1,2,1,0,0"))
                                          (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "40") (term "1,0,1,0,1,0"))
                                          (rule "inEqSimp_ltRight" (formula "46"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "41") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "26") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "6"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "27") (term "1") (ifseqformula "14"))
                                          (rule "inEqSimp_invertInEq1" (formula "1"))
                                          (rule "times_zero_2" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "JML_represents_clause_for_FileReader_footprint" (formula "46") (term "2") (userinteraction))
                                          (rule "elementOfUnion" (formula "46") (userinteraction))
                                          (rule "orRight" (formula "46") (userinteraction))
                                          (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "26") (userinteraction))
                                          (rule "applyEq" (formula "1") (term "0,2,1") (ifseqformula "26") (userinteraction))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "1,0,0,0,1,0") (ifseqformula "35"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,0,0,1,0") (ifseqformula "30"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0,0,0,1,0") (ifseqformula "21"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "eqSymm" (formula "40") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "40") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "47"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_next<<anonHeapFunction>> = TRUE)"
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0,0,0,1,0") (ifseqformula "34"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0,0,1,0") (ifseqformula "29"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,1,0,0,0,1,0") (ifseqformula "20"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "41"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                       (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                       (rule "eqSymm" (formula "23"))
                                       (rule "eqSymm" (formula "2"))
                                       (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                       (rule "eqSymm" (formula "39") (term "0,1,0,1,0"))
                                       (rule "eqSymm" (formula "39") (term "1,1,0,1,0"))
                                       (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "43")))
                                       (rule "closeTrue" (formula "49"))
                                    )
                                 )
                                 (branch " ( (o_0, f_0) in {(result_22, FileReader::$state)} | (o_0, f_0) in {(result_22, FileReader::$remaining)}) & !f_0 = java.lang.Object::<created> | !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_next<<anonHeapFunction>> = TRUE) FALSE"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "closeTrue" (formula "50") (userinteraction))
                                 )
                              )
                           )
                        )
                     )
                     (branch "CUT: (o_0, f_0) in infiniteUnion_0 | !(o_0, f_0) in infiniteUnion_0 FALSE"
                        (rule "hide_right" (formula "44") (userinteraction))
                        (rule "hide_right" (formula "46") (userinteraction))
                        (rule "hide_right" (formula "44") (userinteraction))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "closeTrue" (formula "40"))
                     )
                  )
                  (branch "CUT: it.to_see@heapAfter_next = it.to_see@heapAfter_use FALSE"
                     (rule "hide_right" (formula "43") (userinteraction))
                     (rule "hide_right" (formula "43") (userinteraction))
                     (rule "hide_right" (formula "44") (userinteraction))
                     (rule "hide_right" (formula "43") (userinteraction))
                     (rule "selectOfAnonEQ" (formula "39") (term "0") (ifseqformula "17") (userinteraction))
                     (rule "selectOfAnonEQ" (formula "39") (term "1") (ifseqformula "26") (userinteraction))
                     (rule "selectOfAnonEQ" (formula "39") (term "2,1") (ifseqformula "17") (userinteraction))
                      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")) (ifInst ""  (formula "42")) (ifInst ""  (formula "42")))
                     (rule "ifthenelse_split" (formula "39") (term "1") (userinteraction))
                     (branch " (it, LinkedListIterator::$to_see) in result_22.footprint @heapAfter_next | !it.<created>@heapAfter_next = TRUE TRUE"
                        (rule "orLeft" (formula "1") (userinteraction))
                        (branch "(it, LinkedListIterator::$to_see) in result_22.footprint @heapAfter_next"
                           (rule "JML_represents_clause_for_FileReader_footprint" (formula "1") (term "2") (userinteraction))
                           (rule "elementOfUnion" (formula "1") (userinteraction))
                           (rule "elementOfSingleton" (formula "1") (term "0") (userinteraction))
                           (rule "elementOfSingleton" (formula "1") (term "1") (userinteraction))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1") (userinteraction))
                        )
                        (branch "!it.<created>@heapAfter_next = TRUE"
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0,0,0,1,0") (ifseqformula "32"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0,0,0,1,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,1,0,0,0,1,0") (ifseqformula "18"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "39"))
                           (rule "eqSymm" (formula "22"))
                           (rule "eqSymm" (formula "37") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "37") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "21"))
                           (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                           (rule "replace_known_right" (formula "41") (term "0,1,0,0") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "eqSymm" (formula "41"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "39"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "44")))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                     (branch " (it, LinkedListIterator::$to_see) in result_22.footprint @heapAfter_next | !it.<created>@heapAfter_next = TRUE FALSE"
                        (rule "cut_direct" (formula "40") (term "0,0") (userinteraction))
                        (branch "CUT: (it, LinkedListIterator::$to_see) in it.footprint | !it.<created> = TRUE TRUE"
                           (rule "orLeft" (formula "1") (userinteraction))
                           (branch "(it, LinkedListIterator::$to_see) in it.footprint"
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "41") (userinteraction))
                           )
                           (branch "!it.<created> = TRUE"
                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "41"))
                           )
                        )
                        (branch "CUT: (it, LinkedListIterator::$to_see) in it.footprint | !it.<created> = TRUE FALSE"
                           (rule "orRight" (formula "39") (userinteraction))
                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")))
                           (rule "closeTrue" (formula "42") (userinteraction))
                        )
                     )
                  )
               )
               (branch "Exceptional Post (recursive)"
                   (builtin "One Step Simplification" (formula "30"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                  (rule "andLeft" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0") (ifseqformula "16"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0,0,0,1,0,1,0,0,0,1") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0,0,0,1,0,1,0,0,0,1") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0,0,0,1,0,1,0,0,0,1") (ifseqformula "16"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "31"))
                  (rule "close" (formula "34") (ifseqformula "33"))
               )
               (branch "Pre (recursive)"
                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                   (builtin "Use Dependency Contract" (formula "32") (term "0,0,0,0,0,0,0,0") (ifInst ""  (formula "23")) (ifInst ""  (formula "25")) (contract "LinkedListIterator[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                  (rule "impLeft" (formula "29") (userinteraction))
                  (branch "Case 1"
                     (rule "hide_right" (formula "33") (userinteraction))
                     (rule "andRight" (formula "29"))
                     (branch "Case 1"
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                           (rule "andRight" (formula "29"))
                           (branch "Case 1"
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "notRight" (formula "29"))
                                 (rule "close" (formula "32") (ifseqformula "1"))
                              )
                              (branch "Case 2"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "16"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                                 (rule "orRight" (formula "29"))
                                 (rule "eqSymm" (formula "12") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "29")))
                                 (rule "closeFalse" (formula "5"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "wellFormedAnonEQ" (formula "29") (ifseqformula "16"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                                 (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "eqSymm" (formula "12") (term "0,1,0,1,0"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "15")))
                                 (rule "closeTrue" (formula "29"))
                              )
                              (branch "Case 2"
                                 (rule "wellFormedAnonEQ" (formula "29") (ifseqformula "25"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                                 (rule "wellFormedAnonEQ" (formula "29") (term "0") (ifseqformula "16"))
                                 (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "12") (term "0,1,0,1,0"))
                                 (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "31"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "3")) (ifInst ""  (formula "15")))
                                 (rule "closeTrue" (formula "29"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "close" (formula "29") (ifseqformula "23"))
                        )
                     )
                     (branch "Case 2"
                        (rule "disjointDefinition" (formula "29") (userinteraction))
                        (rule "JML_represents_clause_for_FileReader_footprint" (formula "29") (term "0,0") (userinteraction))
                        (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "29") (term "0,1,0") (userinteraction))
                        (rule "JML_represents_clause_for_LinkedList_footprint" (formula "29") (term "1,1,0") (inst "i=i") (userinteraction))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                        (rule "eqSymm" (formula "21"))
                        (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                        (rule "eqSymm" (formula "20"))
                        (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
                        (rule "eqSymm" (formula "12") (term "0,1,0,1,0"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "castedGetAny" (formula "29") (term "0,1,0,1,1,1,0"))
                        (rule "castedGetAny" (formula "21") (term "0"))
                        (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0"))
                        (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0"))
                        (rule "castedGetAny" (formula "12") (term "1,0,1,0,1,0"))
                        (rule "castedGetAny" (formula "12") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "9"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,1,1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "distributeIntersection_2" (formula "29") (term "0"))
                        (rule "unionEqualsEmpty" (formula "29"))
                        (rule "disjointWithSingleton2" (formula "29") (term "1"))
                        (rule "disjointWithSingleton2" (formula "29") (term "0"))
                        (rule "elementOfUnion" (formula "29") (term "0,1"))
                        (rule "elementOfUnion" (formula "29") (term "0,0"))
                        (rule "elementOfUnion" (formula "29") (term "0,0,1"))
                        (rule "elementOfSingleton" (formula "29") (term "1,0,0,1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "elementOfUnion" (formula "29") (term "1,0,1"))
                        (rule "elementOfInfiniteUnion" (formula "29") (term "1,1,0,1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "eqSymm" (formula "29") (term "1,0,1,1,0,1"))
                        (rule "sortsDisjointModuloNull" (formula "29") (term "1,0,1,1,0,1"))
                        (rule "replace_known_right" (formula "29") (term "1,1,0,1,1,0,1") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=LinkedListIterator_list_0"))
                        (rule "applyEq" (formula "30") (term "0,0,0,0,0,2,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,0,0,0,2,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,0,0,2,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,0,0,2,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "1,0,0,1,0,1,2,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,0,2,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,0,2,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,2,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,0,0,0,2,1,0,1") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,0,0,0,0,0,2,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "0,1,0,0,0,0,2,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "30") (term "1,0,1,1,1,0,0,1,2,1,0,0") (ifseqformula "22"))
                        (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,0,0,0,0,0,2,1,0,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0,2,1,0,1") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "1,0,1,1,1,0,0,1,2,1,0,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0,0,2,1,0,1") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,2,1,0,1") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0,0,2,1,0,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,2,1,0,1") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,0,2,1,0,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0,2,1,0,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,0,0,0,0,2,1,0,1") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,0,0,0,2,1,0,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0,1,2,1,0,0") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedListIterator_seen_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                        (rule "eqSymm" (formula "20"))
                        (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                        (rule "hideAuxiliaryEq" (formula "20"))
                        (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=FileReader_state_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "31")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "29"))
                        (rule "ifEqualsInteger" (formula "28"))
                        (rule "elementOfUnion" (formula "30") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "30") (term "1,0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "pullOutSelect" (formula "20") (term "1") (inst "selectSK=LinkedListIterator_to_see_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "elementOfUnion" (formula "30") (term "1,0,1"))
                        (rule "elementOfSingleton" (formula "30") (term "1,1,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "1,0,1"))
                        (rule "elementOfSingleton" (formula "30") (term "1,1,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "1,0,1"))
                        (rule "elementOfSingleton" (formula "30") (term "1,1,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "0,0,1"))
                        (rule "elementOfSingleton" (formula "30") (term "1,0,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "1,0,0"))
                        (rule "elementOfInfiniteUnion" (formula "30") (term "1,1,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "eqSymm" (formula "30") (term "1,0,1,1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "30") (term "1,0,1,1,0,0"))
                        (rule "replace_known_right" (formula "30") (term "1,1,0,1,1,0,0") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "0,0,1"))
                        (rule "elementOfSingleton" (formula "30") (term "1,0,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "1,0,1"))
                        (rule "elementOfSingleton" (formula "30") (term "1,1,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfSingleton" (formula "30") (term "1,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "1,0,0"))
                        (rule "elementOfSingleton" (formula "30") (term "1,1,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "30") (term "1,0,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfUnion" (formula "30") (term "0,1"))
                        (rule "elementOfSingleton" (formula "30") (term "1,0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "elementOfSingleton" (formula "30") (term "0,1"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "notRight" (formula "30"))
                        (rule "elementOfUnion" (formula "1") (term "0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "23") (userinteraction))
                     (rule "equiv_left" (formula "29") (userinteraction))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "34") (term "0,0,0,0,0,0,0,0") (ifseqformula "29") (userinteraction))
                        (rule "true_left" (formula "30") (userinteraction))
                         (builtin "One Step Simplification" (formula "33"))
                         (builtin "Use Dependency Contract" (formula "33") (term "0,0,0,0,0,0,0") (ifInst ""  (formula "11") (term "1,1,0,1,0")) (ifInst ""  (formula "25")) (ifInst ""  (formula "16")) (contract "LinkedList[java.lang.Object::<inv>()].JML accessible clause.0"))
                        (rule "impLeft" (formula "30") (userinteraction))
                        (branch "Case 1"
                           (rule "disjointDefinition" (formula "30") (term "1") (userinteraction))
                           (rule "JML_represents_clause_for_FileReader_footprint" (formula "30") (term "0,0,0,1") (userinteraction))
                           (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "30") (term "1,0,0,1") (userinteraction))
                           (rule "JML_represents_clause_for_LinkedList_footprint" (formula "30") (term "1,0,1") (inst "i=i") (userinteraction))
                           (rule "hide_right" (formula "34") (userinteraction))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                           (rule "wellFormedAnonEQ" (formula "30") (term "1,1,0,0") (ifseqformula "25"))
                           (rule "wellFormedAnonEQ" (formula "30") (term "0,1,1,0,0") (ifseqformula "16"))
                           (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "20"))
                           (rule "eqSymm" (formula "12") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "21"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "31"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "replace_known_left" (formula "30") (term "1,0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "32")) (ifInst ""  (formula "3")) (ifInst ""  (formula "3")) (ifInst ""  (formula "15")) (ifInst ""  (formula "24")) (ifInst ""  (formula "8")))
                           (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "12") (term "1,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "12") (term "0,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "21") (term "0"))
                           (rule "castedGetAny" (formula "30") (term "0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,1,0"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,1,0"))
                           (rule "distributeIntersection" (formula "30") (term "0"))
                           (rule "distributeIntersection_2" (formula "30") (term "1,0"))
                           (rule "distributeIntersection_2" (formula "30") (term "0,0"))
                           (rule "distributeIntersection_2" (formula "30") (term "1,1,0"))
                           (rule "distributeIntersection_2" (formula "30") (term "0,1,0"))
                           (rule "distributeIntersection" (formula "30") (term "1,0,0"))
                           (rule "distributeIntersection_2" (formula "30") (term "0,0,0"))
                           (rule "distributeIntersection_2" (formula "30") (term "0,1,1,0"))
                           (rule "intersectWithSingleton" (formula "30") (term "1,1,1,0"))
                           (rule "elementOfInfiniteUnion" (formula "30") (term "0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "eqSymm" (formula "30") (term "1,0,0,1,1,1,0"))
                           (rule "sortsDisjointModuloNull" (formula "30") (term "1,0,0,1,1,1,0"))
                           (rule "replace_known_right" (formula "30") (term "1,1,0,0,1,1,1,0") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=FileReader_state_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "29"))
                           (rule "ifEqualsInteger" (formula "28"))
                           (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=LinkedListIterator_list_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "35")) (ifInst ""  (formula "5")))
                           (rule "eqSymm" (formula "23"))
                           (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "23"))
                           (rule "hideAuxiliaryEq" (formula "23"))
                           (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=LinkedListIterator_seen_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "35")) (ifInst ""  (formula "5")))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "pullOutSelect" (formula "20") (term "1") (inst "selectSK=LinkedListIterator_to_see_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "35")) (ifInst ""  (formula "5")))
                           (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
                           (rule "hideAuxiliaryEq" (formula "21"))
                           (rule "intersectWithSingleton" (formula "31") (term "1,0,0,0"))
                           (rule "distributeIntersection_2" (formula "31") (term "0,1,1,0"))
                           (rule "distributeIntersection_2" (formula "31") (term "1,1,0,0"))
                           (rule "distributeIntersection" (formula "31") (term "0,1,0,0"))
                           (rule "intersectWithSingleton" (formula "31") (term "0,0,0,0"))
                           (rule "intersectWithSingleton" (formula "31") (term "0,0,1,0"))
                           (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "eqSymm" (formula "31") (term "1,0,0,0,0,1,0"))
                           (rule "sortsDisjointModuloNull" (formula "31") (term "1,0,0,0,0,1,0"))
                           (rule "replace_known_right" (formula "31") (term "1,1,0,0,0,0,1,0") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "distributeIntersection_2" (formula "31") (term "0,1,1,0,0"))
                           (rule "distributeIntersection_2" (formula "31") (term "0,0,1,0,0"))
                           (rule "distributeIntersection_2" (formula "31") (term "0,0,1,1,0"))
                           (rule "intersectWithSingleton" (formula "31") (term "1,0,1,1,0"))
                           (rule "elementOfInfiniteUnion" (formula "31") (term "0,1,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "eqSymm" (formula "31") (term "1,0,0,1,0,1,1,0"))
                           (rule "sortsDisjointModuloNull" (formula "31") (term "1,0,0,1,0,1,1,0"))
                           (rule "replace_known_right" (formula "31") (term "1,1,0,0,1,0,1,1,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "intersectWithSingleton" (formula "31") (term "0,0,1,1,0"))
                           (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "eqSymm" (formula "31") (term "1,0,0,0,0,1,1,0"))
                           (rule "sortsDisjointModuloNull" (formula "31") (term "1,0,0,0,0,1,1,0"))
                           (rule "replace_known_right" (formula "31") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "elementOfUnion" (formula "31") (term "0,1,0,0,0"))
                           (rule "elementOfSingleton" (formula "31") (term "1,0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "unionEqualsEmpty" (formula "31"))
                           (rule "distributeIntersection" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "intersectWithSingleton" (formula "31") (term "0,0,1"))
                           (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,0,1"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "eqSymm" (formula "31") (term "1,0,0,0,0,1"))
                           (rule "sortsDisjointModuloNull" (formula "31") (term "1,0,0,0,0,1"))
                           (rule "replace_known_right" (formula "31") (term "1,1,0,0,0,0,1") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "intersectWithSingleton" (formula "31") (term "0,1,0,0,1,0,0"))
                           (rule "unionEqualsEmpty" (formula "31") (term "1"))
                           (rule "disjointInfiniteUnion_2" (formula "31") (term "1,1"))
                           (rule "disjointInfiniteUnion_2" (formula "31") (term "0,1"))
                           (rule "disjointWithSingleton2" (formula "31") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "eqSymm" (formula "31") (term "1,0,0,1,1"))
                           (rule "disjointWithSingleton2" (formula "31") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "eqSymm" (formula "31") (term "1,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "sortsDisjointModuloNull" (formula "31") (term "1,0,0,1"))
                           (rule "replace_known_right" (formula "31") (term "1,1,0,0,1") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "intersectWithSingleton" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "elementOfSingleton" (formula "31") (term "0,1,1,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "elementOfUnion" (formula "31") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "distributeIntersection_2" (formula "31") (term "0,0,1,1,0"))
                           (rule "distributeIntersection_2" (formula "31") (term "1,0,1,0"))
                           (rule "elementOfUnion" (formula "31") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "intersectWithSingleton" (formula "31") (term "1,1,1,0"))
                           (rule "elementOfSingleton" (formula "31") (term "0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "elementOfUnion" (formula "31") (term "0,1,0,0,1,0"))
                           (rule "elementOfSingleton" (formula "31") (term "0,0,1,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "elementOfSingleton" (formula "31") (term "0,1,0,0,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "elementOfUnion" (formula "31") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "distributeIntersection_2" (formula "31") (term "0,0,1,1,0"))
                           (rule "distributeIntersection_2" (formula "31") (term "0,0,1,0"))
                           (rule "intersectWithSingleton" (formula "31") (term "1,1,1,0"))
                           (rule "elementOfSingleton" (formula "31") (term "0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "pullOutSelect" (formula "28") (term "0,1,1") (inst "selectSK=FileReader_state_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
                           (rule "intersectWithSingleton" (formula "32") (term "1,1,1,0"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "unionEqualsEmpty" (formula "32"))
                           (rule "distributeIntersection" (formula "32") (term "0,0,0,0,1"))
                           (rule "unionEqualsEmpty" (formula "32") (term "0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "distributeIntersection" (formula "32") (term "1,0,0,0,1"))
                           (rule "distributeIntersection_2" (formula "32") (term "0,0,0,0,0,1"))
                           (rule "intersectWithSingleton" (formula "32") (term "0,1,0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "0,0,1,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "intersectWithSingleton" (formula "32") (term "1,1,0,0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,1,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "intersectWithSingleton" (formula "32") (term "1,1,0,0,0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,1,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "unionEqualsEmpty" (formula "32") (term "1"))
                           (rule "disjointWithSingleton1" (formula "32") (term "1,1"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfUnion" (formula "32") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "distributeIntersection_2" (formula "32") (term "0,0,0,0,0,1"))
                           (rule "intersectWithSingleton" (formula "32") (term "1,0,0,1"))
                           (rule "intersectWithSingleton" (formula "32") (term "1,0,0,0,0,1"))
                           (rule "elementOfUnion" (formula "32") (term "0,0"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "intersectWithSingleton" (formula "32") (term "1,0,0,0,0,0,1"))
                           (rule "distributeIntersection_2" (formula "32") (term "1,0,0,0,1"))
                           (rule "elementOfUnion" (formula "32") (term "0,1,0,0,0,0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,1,0,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,0,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "distributeIntersection" (formula "32") (term "0,0,0,0,0,1"))
                           (rule "elementOfUnion" (formula "32") (term "0,1,0,0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,1,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfUnion" (formula "32") (term "0,1,0,0,0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,1,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "unionEqualsEmpty" (formula "32") (term "1"))
                           (rule "disjointWithSingleton1" (formula "32") (term "1,1"))
                           (rule "elementOfUnion" (formula "32") (term "0,0"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfUnion" (formula "32") (term "0,1,1"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,1,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfUnion" (formula "32") (term "0,0"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfSingleton" (formula "32") (term "0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "unionEqualsEmpty" (formula "32") (term "0"))
                           (rule "elementOfUnion" (formula "32") (term "0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "1,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "intersectWithSingleton" (formula "32") (term "1,0,0,0"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "disjointWithSingleton1" (formula "32") (term "0,0"))
                           (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "unionEqualsEmpty" (formula "32") (term "0"))
                           (rule "disjointWithSingleton1" (formula "32") (term "0,0"))
                           (rule "disjointWithSingleton2" (formula "32") (term "1,0"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfUnion" (formula "32") (term "0,1"))
                           (rule "elementOfSingleton" (formula "32") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "elementOfSingleton" (formula "32") (term "0,1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "notRight" (formula "32"))
                           (rule "elementOfUnion" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "equiv_left" (formula "30") (userinteraction))
                           (branch "Case 1"
                              (rule "replace_known_left" (formula "34") (term "0,0,0,0,0,0,0") (ifseqformula "30") (userinteraction))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "selectOfAnonEQ" (formula "34") (term "0,0,0,0,0,0,0") (ifseqformula "25") (userinteraction))
                              (rule "applyEq" (formula "34") (term "2,0,0,0,0,0,0,0") (ifseqformula "22") (userinteraction))
                              (rule "ifthenelse_split" (formula "34") (term "0,0,0,0,0,0,0") (userinteraction))
                              (branch " (it, LinkedListIterator::$list) in result_22.footprint @heapAfter_next & ! LinkedListIterator::$list = java.lang.Object::<created> | (it, LinkedListIterator::$list) in freshLocs(heapAfter_next) TRUE"
                                 (rule "orLeft" (formula "1") (userinteraction))
                                 (branch " (it, LinkedListIterator::$list) in result_22.footprint @heapAfter_next & ! LinkedListIterator::$list = java.lang.Object::<created>"
                                    (rule "JML_represents_clause_for_FileReader_footprint" (formula "1") (term "2,0") (userinteraction))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,1,0") (ifseqformula "26"))
                                    (rule "wellFormedAnonEQ" (formula "35") (term "0,0,1,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0") (ifseqformula "17"))
                                    (rule "wellFormedAnonEQ" (formula "35") (term "0,0,0,1,0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,1,0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0,0,1,0,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0,0,1,0,1,0,0,0,0,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "35") (term "0,1,0,1,0,1,0,0,0"))
                                    (rule "eqSymm" (formula "35") (term "1,1,0,1,0,1,0,0"))
                                    (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "35") (term "1,1,0,1,0,1,0,0,0"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                                    (rule "eqSymm" (formula "35") (term "0,1,0,1,0,1,0,0"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "32"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_left" (formula "35") (term "0,0,1,1,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "4")) (ifInst ""  (formula "16")) (ifInst ""  (formula "25")) (ifInst ""  (formula "5")))
                                    (rule "castedGetAny" (formula "22") (term "0"))
                                    (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "2"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "35") (term "0,0,1,0,1,0,1,0,0"))
                                    (rule "castedGetAny" (formula "35") (term "1,0,1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "35") (term "1,0,1,0,1,0,1,0,0"))
                                    (rule "castedGetAny" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0,0,0,0"))
                                    (rule "measuredByCheck" (formula "35") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "precOfInt" (formula "35") (term "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1"))
                                    (rule "applyEq" (formula "23") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,1"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "(it, LinkedListIterator::$list) in freshLocs(heapAfter_next)"
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0") (ifseqformula "26"))
                                    (rule "wellFormedAnonEQ" (formula "35") (term "0,0,1,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,1,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,1,0") (ifseqformula "17"))
                                    (rule "wellFormedAnonEQ" (formula "35") (term "0,0,0,1,0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0,0,1,0,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0,0,1,0,1,0,0,0,0,0") (ifseqformula "17"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "31"))
                                    (rule "eqSymm" (formula "36") (term "0,1,0,1,0,1,0,0,0"))
                                    (rule "eqSymm" (formula "36") (term "0,1,0,1,0,1,0,0"))
                                    (rule "eqSymm" (formula "20"))
                                    (rule "eqSymm" (formula "36") (term "1,1,0,1,0,1,0,0"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "36") (term "1,1,0,1,0,1,0,0,0"))
                                    (rule "eqSymm" (formula "12") (term "0,1,0,1,0"))
                                    (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                                    (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                    (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "31"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                              (branch " (it, LinkedListIterator::$list) in result_22.footprint @heapAfter_next & ! LinkedListIterator::$list = java.lang.Object::<created> | (it, LinkedListIterator::$list) in freshLocs(heapAfter_next) FALSE"
                                 (rule "replace_known_left" (formula "35") (term "0,0,0,0,0,0") (ifseqformula "9") (userinteraction))
                                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")))
                                 (rule "hide_right" (formula "34") (userinteraction))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "measuredByCheck" (formula "34") (term "1") (ifseqformula "6") (userinteraction))
                                 (rule "precOfInt" (formula "34") (term "1") (userinteraction))
                                 (rule "cut" (inst "cutFormula=(  Seq::select(heapAfter_use,
               it,
               LinkedListIterator::$to_see)
 = Seq::select(heapAfter_next,
               it,
               LinkedListIterator::$to_see))<<origin(\"User_Interaction @ node 4842 (cut)\",\"[]\")>>") (userinteraction))
                                 (branch "CUT: it.to_see@heapAfter_use = it.to_see@heapAfter_next TRUE"
                                    (rule "cut" (inst "cutFormula=(  Seq::select(heapAfter_use,
               it,
               LinkedListIterator::$seen)
 = Seq::select(heapAfter_next,
               it,
               LinkedListIterator::$seen))<<origin(\"User_Interaction @ node 4843 (cut)\",\"[]\")>>") (userinteraction))
                                    (branch "CUT: it.seen@heapAfter_use = it.seen@heapAfter_next TRUE"
                                       (rule "applyEq" (formula "36") (term "0,1,1,0,0,0,0,0,0,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,0,0,0,1,0,1,0,0,0,0,0,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,0,0,0,1,0,1,0,1,0,0,0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,1,0,0,1,0,0,0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,1,0,0,1,0,0,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,0,0,0,1,0,1,0,1,0,0,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,0,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,0,0,0,1,0,1,0,1,0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,0,1,0,1,0,1,0,1,0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,0,1,1") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,0,1") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,1,0,0,1,0,1,0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,1,0,0,1,0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,1,1,0,0,1,0,1,0,0,0") (ifseqformula "1") (userinteraction))
                                       (rule "andRight" (formula "36"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "36"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "36"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "36"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "36"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "36") (inst "sk=i_0") (userinteraction))
                                                      (rule "impRight" (formula "36") (userinteraction))
                                                      (rule "applyEq" (formula "37") (term "0,1,0,0,0,1,0") (ifseqformula "22") (userinteraction))
                                                      (rule "eqTermCut" (formula "37") (term "1,1,0,0,0,1,0") (inst "s=seqLen(Seq::select(heap, it, LinkedListIterator::$seen))") (userinteraction))
                                                      (branch "Assume i_0 = it.seen.length"
                                                         (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "1") (userinteraction))
                                                         (rule "exRight" (formula "38") (inst "t=result_22<<origin(\"User_Interaction @ node 2526 (exRight)\",\"[]\")>>") (userinteraction))
                                                         (rule "hide_right" (formula "39") (userinteraction))
                                                         (rule "andRight" (formula "38"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "38"))
                                                            (branch "Case 1"
                                                               (rule "orRight" (formula "38"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (ifseqformula "29"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0") (ifseqformula "20"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "orRight" (formula "39"))
                                                               (rule "orRight" (formula "39"))
                                                               (rule "eqSymm" (formula "18") (term "0,1,0,1,0"))
                                                               (rule "eqSymm" (formula "18") (term "1,1,0,1,0"))
                                                               (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "eqSymm" (formula "26"))
                                                               (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                                               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "37"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "replace_known_right" (formula "23") (term "1,1") (ifseqformula "40"))
                                                                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "36")) (ifInst ""  (formula "39")))
                                                               (rule "closeFalse" (formula "23"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "notRight" (formula "38"))
                                                               (rule "close" (formula "36") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "38"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "38"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "38"))
                                                                  (branch "Case 1"
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "eqSymm" (formula "18") (term "0,1,0,1,0"))
                                                                     (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                                                     (rule "eqSymm" (formula "18") (term "1,1,0,1,0"))
                                                                     (rule "eqSymm" (formula "39"))
                                                                     (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "eqSymm" (formula "25"))
                                                                     (rule "eqSymm" (formula "26"))
                                                                     (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "37"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "38"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "36"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "castedGetAny" (formula "18") (term "1,0,1,0,1,0"))
                                                                     (rule "castedGetAny" (formula "18") (term "0,0,1,0,1,0"))
                                                                     (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                                                     (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                                                     (rule "castedGetAny" (formula "26") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "6"))
                                                                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                     (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "27") (term "1") (ifseqformula "14"))
                                                                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                     (rule "mul_literals" (formula "6") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                                                     (rule "getOfSeqConcat" (formula "39") (term "0"))
                                                                     (rule "polySimp_elimSub" (formula "39") (term "1,2,0"))
                                                                     (rule "getOfSeqSingleton" (formula "39") (term "2,0"))
                                                                     (rule "castDel" (formula "39") (term "2,2,0"))
                                                                     (rule "castDel" (formula "39") (term "1,2,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                                                                     (rule "applyEq" (formula "39") (term "0,1,0,0,2,0") (ifseqformula "1"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "39") (term "0,0,2,0"))
                                                                     (rule "add_literals" (formula "39") (term "1,0,0,2,0"))
                                                                     (rule "times_zero_1" (formula "39") (term "0,0,2,0"))
                                                                      (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "orRight" (formula "39"))
                                                                     (rule "notRight" (formula "39"))
                                                                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "2"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0"))
                                                                     (rule "leq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "notRight" (formula "38"))
                                                                     (rule "close" (formula "36") (ifseqformula "1"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "close" (formula "38") (ifseqformula "32"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "close" (formula "38") (ifseqformula "31"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Assume i_0 != it.seen.length"
                                                         (rule "exRight" (formula "38") (inst "t=(FileReader)(any::seqGet(Seq::select(heap,
                                     it,
                                     LinkedListIterator::$seen),
                         i_0))") (userinteraction))
                                                         (rule "hide_right" (formula "39") (userinteraction))
                                                         (rule "cut" (inst "cutFormula=lt(i_0,
   seqLen(Seq::select(heap,
                      it,
                      LinkedListIterator::$seen)))<<origin(\"User_Interaction @ node 2682 (cut)\",\"[]\")>>") (userinteraction))
                                                         (branch "CUT: i_0 < it.seen.length TRUE"
                                                            (rule "getOfSeqConcat" (formula "39") (term "1,0,0,0,1") (userinteraction))
                                                            (rule "replace_known_left" (formula "39") (term "0,1,0,0,0,1") (ifseqformula "1") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "allLeftHide" (formula "15") (inst "t=i_0") (userinteraction))
                                                            (rule "impLeft" (formula "15") (userinteraction))
                                                            (branch "Case 1"
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0,0") (ifseqformula "29"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0") (ifseqformula "20"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "eqSymm" (formula "25"))
                                                               (rule "eqSymm" (formula "24"))
                                                               (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                                               (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                               (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                                               (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "39"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "2")))
                                                               (rule "closeTrue" (formula "36"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "exLeft" (formula "15") (inst "sk=f_0") (userinteraction))
                                                               (rule "andLeft" (formula "15"))
                                                               (rule "andLeft" (formula "15"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "notLeft" (formula "16"))
                                                               (rule "andLeft" (formula "16"))
                                                               (rule "andLeft" (formula "16"))
                                                               (rule "notLeft" (formula "17"))
                                                               (rule "orLeft" (formula "15"))
                                                               (branch "f_0 = null"
                                                                  (rule "close" (formula "39") (ifseqformula "15"))
                                                               )
                                                               (branch "f_0.<created> = TRUE"
                                                                  (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0,1") (ifseqformula "16") (userinteraction))
                                                                  (rule "castDel" (formula "43") (term "0,0,0,0,1") (userinteraction))
                                                                  (rule "applyEqReverse" (formula "43") (term "1,0,0,0,1") (ifseqformula "16") (userinteraction))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "andRight" (formula "43"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "43"))
                                                                     (branch "Case 1"
                                                                        (rule "orRight" (formula "43"))
                                                                        (rule "applyEqReverse" (formula "44") (term "0,1,0") (ifseqformula "16") (userinteraction))
                                                                        (rule "castDel" (formula "44") (term "1,0") (userinteraction))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (ifseqformula "33"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "24"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0") (ifseqformula "24"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "orRight" (formula "45"))
                                                                        (rule "orRight" (formula "45"))
                                                                        (rule "close" (formula "45") (ifseqformula "15"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "notRight" (formula "43"))
                                                                        (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "17") (userinteraction))
                                                                        (rule "castDel" (formula "1") (term "0") (userinteraction))
                                                                        (rule "close" (formula "40") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0") (ifseqformula "16") (userinteraction))
                                                                     (rule "castDel" (formula "43") (term "0,0,0,0") (userinteraction))
                                                                     (rule "cut_direct" (formula "43") (term "0,0") (userinteraction))
                                                                     (branch "CUT: !f_0 = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "applyEqReverse" (formula "44") (term "0,1,0,0") (ifseqformula "17") (userinteraction))
                                                                        (rule "castDel" (formula "44") (term "1,0,0") (userinteraction))
                                                                        (rule "castDel2" (formula "44") (term "1,1") (ifseqformula "17") (userinteraction))
                                                                        (rule "selectOfAnonEQ" (formula "44") (term "0,0") (ifseqformula "34") (userinteraction))
                                                                        (rule "Class_invariant_axiom_for_FileReader" (formula "44") (term "1") (userinteraction))
                                                                        (rule "selectOfAnonEQ" (formula "44") (term "0,1") (ifseqformula "34") (userinteraction))
                                                                        (rule "Class_invariant_axiom_for_FileReader" (formula "19") (userinteraction))
                                                                        (rule "selectOfAnonEQ" (formula "44") (term "2,0,1") (ifseqformula "25") (userinteraction))
                                                                        (rule "eqTermCut" (formula "44") (term "0,0,0,0,0,0") (inst "s=result_22<<origin(\"User_Interaction @ node 8007 (eqTermCut)\",\"[]\")>>") (userinteraction))
                                                                        (branch "Assume f_0 = result_22"
                                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "17")))
                                                                           (rule "hide_right" (formula "45") (userinteraction))
                                                                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "18") (userinteraction))
                                                                           (rule "allLeftHide" (formula "23") (inst "t=i_0") (userinteraction))
                                                                           (rule "andLeft" (formula "5") (userinteraction))
                                                                           (rule "impLeft" (formula "24") (userinteraction))
                                                                           (branch "Case 1"
                                                                              (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "5") (userinteraction))
                                                                              (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "29") (userinteraction))
                                                                              (rule "lenOfSeqConcat" (formula "6") (term "1") (userinteraction))
                                                                               (builtin "One Step Simplification" (formula "6"))
                                                                               (builtin "SMTRule")
                                                                           )
                                                                           (branch "Case 2"
                                                                               (builtin "SMTRule")
                                                                           )
                                                                        )
                                                                        (branch "Assume f_0 != result_22"
                                                                           (rule "JML_represents_clause_for_FileReader_footprint" (formula "45") (term "2,0,0,0,0,0") (userinteraction))
                                                                           (rule "JML_represents_clause_for_FileReader_footprint" (formula "45") (term "2,0,0,0,0,1") (userinteraction))
                                                                           (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "45") (term "2,0,0,0,2,0,1") (userinteraction))
                                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "17")))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,0") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "0,0,0,0,0") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,0") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,1") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,2,0,1") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,2,0,1") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,2,0,1") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,0,2,0,1") (userinteraction))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "elementOfSingleton" (formula "45") (term "0,0,0,0,1") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,1") (userinteraction))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "elementOfSingleton" (formula "45") (term "0,0,0,0,0,2,0,1") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,0,2,0,1") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,2,0,1") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,2,0,1") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,2,0,1") (userinteraction))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "selectOfAnonEQ" (formula "45") (term "2,0,0") (ifseqformula "26") (userinteraction))
                                                                           (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "45") (term "2,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfUnion" (formula "45") (term "0,0,0,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "0,0,0,0,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,0,2,0,0") (userinteraction))
                                                                           (rule "elementOfSingleton" (formula "45") (term "1,0,0,0,2,0,0") (userinteraction))
                                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "2")) (ifInst ""  (formula "17")))
                                                                           (rule "applyEq" (formula "45") (term "2,0,0") (ifseqformula "19") (userinteraction))
                                                                           (rule "notLeft" (formula "1") (userinteraction))
                                                                           (rule "replace_known_right" (formula "45") (term "0,0,0,0") (ifseqformula "40") (userinteraction))
                                                                           (rule "replace_known_right" (formula "45") (term "0,0,0,1") (ifseqformula "40") (userinteraction))
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "25"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0") (ifseqformula "25"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,1") (ifseqformula "25"))
                                                                           (rule "andLeft" (formula "4"))
                                                                           (rule "notLeft" (formula "1"))
                                                                           (rule "notLeft" (formula "2"))
                                                                           (rule "eqSymm" (formula "16"))
                                                                           (rule "eqSymm" (formula "20") (term "1,1,0,1,0"))
                                                                           (rule "eqSymm" (formula "20") (term "0,1,0,1,0"))
                                                                           (rule "eqSymm" (formula "21") (term "0,1,0,1,0"))
                                                                           (rule "eqSymm" (formula "40"))
                                                                           (rule "eqSymm" (formula "29"))
                                                                           (rule "eqSymm" (formula "21") (term "1,1,0,1,0"))
                                                                           (rule "eqSymm" (formula "28"))
                                                                           (rule "eqSymm" (formula "39"))
                                                                           (rule "replace_known_left" (formula "45") (term "0,0,0,0,1") (ifseqformula "15"))
                                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "15")) (ifInst ""  (formula "18")))
                                                                           (rule "closeTrue" (formula "45"))
                                                                        )
                                                                     )
                                                                     (branch "CUT: !f_0 = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "false_right" (formula "44"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "24"))
                                                                        (rule "notRight" (formula "43"))
                                                                        (rule "close" (formula "40") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: i_0 < it.seen.length FALSE"
                                                            (rule "hide_right" (formula "39") (userinteraction))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                            (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                            (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                                            (rule "eqSymm" (formula "24"))
                                                            (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                                            (rule "eqSymm" (formula "25"))
                                                            (rule "eqSymm" (formula "35"))
                                                            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "39"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "38"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "37"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "25") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "36"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "6"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "applyEq" (formula "27") (term "1") (ifseqformula "14"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "36"))
                                                            (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "36") (term "0,0"))
                                                            (rule "qeq_literals" (formula "36") (term "0"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "false_right" (formula "36"))
                                                            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=LinkedListIterator_list_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "39")) (ifInst ""  (formula "10")))
                                                            (rule "eqSymm" (formula "28"))
                                                            (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
                                                            (rule "hideAuxiliaryEq" (formula "28"))
                                                            (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "14"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=LinkedListIterator_to_see_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "31"))
                                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "39")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,1,0,0") (ifseqformula "22"))
                                                            (rule "eqSymm" (formula "6"))
                                                            (rule "applyEq" (formula "5") (term "2,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "11")))
                                                            (rule "applyEq" (formula "26") (term "1") (ifseqformula "6"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "22"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "39")) (ifInst ""  (formula "11")))
                                                            (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "26"))
                                                            (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "26"))
                                                            (rule "hideAuxiliaryEq" (formula "26"))
                                                            (rule "eqSymm" (formula "5") (term "1"))
                                                            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=LinkedListIterator_seen_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "31"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "23"))
                                                            (rule "eqSymm" (formula "5"))
                                                            (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "12")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "23"))
                                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "39")) (ifInst ""  (formula "12")))
                                                            (rule "eqSymm" (formula "26"))
                                                            (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "26"))
                                                            (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "26"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "26"))
                                                            (rule "hideAuxiliaryEq" (formula "26"))
                                                            (rule "lenOfSeqConcat" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "36") (inst "sk=i_0") (userinteraction))
                                                      (rule "impRight" (formula "36") (userinteraction))
                                                      (rule "applyEq" (formula "37") (term "0,1,0,0,0,1,0") (ifseqformula "23") (userinteraction))
                                                      (rule "getOfSeqSub" (formula "37") (term "1,0,0,0,1,0") (userinteraction))
                                                      (rule "andLeft" (formula "1") (userinteraction))
                                                      (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "24") (userinteraction))
                                                      (rule "lenOfSeqSub" (formula "2") (term "1") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "2") (term "1") (userinteraction))
                                                      (branch "1 < it.to_see.length TRUE"
                                                         (rule "replace_known_left" (formula "39") (term "0,0,1,0,0,0,1,0") (ifseqformula "1") (userinteraction))
                                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "3")))
                                                         (rule "allLeftHide" (formula "16") (inst "t=add(i_0, Z(1(#)))") (userinteraction))
                                                         (rule "impLeft" (formula "16") (userinteraction))
                                                         (branch "Case 1"
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0,0,0") (ifseqformula "29"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0,0") (ifseqformula "20"))
                                                            (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                                            (rule "eqSymm" (formula "25"))
                                                            (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                            (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                            (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                                            (rule "eqSymm" (formula "24"))
                                                            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "38"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "37"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "1"))
                                                            (rule "castedGetAny" (formula "25") (term "0"))
                                                            (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "35") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "35"))
                                                            (rule "add_zero_right" (formula "1") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "27") (term "1") (ifseqformula "15"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "mul_literals" (formula "7") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "exLeft" (formula "16") (inst "sk=f_0") (userinteraction))
                                                            (rule "andLeft" (formula "16"))
                                                            (rule "andLeft" (formula "16"))
                                                            (rule "andLeft" (formula "18"))
                                                            (rule "notLeft" (formula "17"))
                                                            (rule "andLeft" (formula "17"))
                                                            (rule "andLeft" (formula "17"))
                                                            (rule "notLeft" (formula "18"))
                                                            (rule "exRightHide" (formula "43") (inst "t=f_0") (userinteraction))
                                                            (rule "replace_known_left" (formula "43") (term "0,0,0,1") (ifseqformula "17") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                            (rule "andRight" (formula "43") (userinteraction))
                                                            (branch "Case 1"
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (ifseqformula "33"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "24"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0") (ifseqformula "24"))
                                                               (rule "orRight" (formula "43"))
                                                               (rule "orRight" (formula "43"))
                                                               (rule "eqSymm" (formula "21") (term "0,1,0,1,0"))
                                                               (rule "eqSymm" (formula "17"))
                                                               (rule "eqSymm" (formula "21") (term "1,1,0,1,0"))
                                                               (rule "eqSymm" (formula "20") (term "0,1,0,1,0"))
                                                               (rule "eqSymm" (formula "20") (term "1,1,0,1,0"))
                                                               (rule "eqSymm" (formula "29"))
                                                               (rule "eqSymm" (formula "28"))
                                                               (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "39"))
                                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "43")))
                                                               (rule "closeFalse" (formula "16"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "Class_invariant_axiom_for_FileReader" (formula "43") (term "1") (userinteraction))
                                                               (rule "selectOfAnonEQ" (formula "43") (term "0,0") (ifseqformula "33") (userinteraction))
                                                               (rule "selectOfAnonEQ" (formula "43") (term "0,1") (ifseqformula "33") (userinteraction))
                                                               (rule "Class_invariant_axiom_for_FileReader" (formula "19") (userinteraction))
                                                               (rule "JML_represents_clause_for_FileReader_footprint" (formula "43") (term "2,0,0,0,0,0") (userinteraction))
                                                               (rule "JML_represents_clause_for_FileReader_footprint" (formula "43") (term "2,0,0,0,0,1") (userinteraction))
                                                               (rule "selectOfAnonEQ" (formula "43") (term "2,0,1") (ifseqformula "24") (userinteraction))
                                                               (rule "selectOfAnonEQ" (formula "43") (term "2,0,0") (ifseqformula "24") (userinteraction))
                                                               (rule "applyEq" (formula "43") (term "2,2,0,0") (ifseqformula "18") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,0,1") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,1") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "0,0,0,0,0,1") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "0,0,0,0,0,0") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0") (userinteraction))
                                                               (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "43") (term "2,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "0,0,0,0,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,2,0,1") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,2,0,1") (userinteraction))
                                                                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                               (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "43") (term "2,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfUnion" (formula "43") (term "0,0,0,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "0,0,0,0,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,2,0,0") (userinteraction))
                                                               (rule "elementOfSingleton" (formula "43") (term "1,0,0,2,0,0") (userinteraction))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "cut_direct" (formula "43") (term "0,0,0") (userinteraction))
                                                               (branch "CUT: f_0 = result_22 | !f_0.<created>@heapAfter_next = TRUE TRUE"
                                                                  (rule "hide_right" (formula "44") (userinteraction))
                                                                   (builtin "SMTRule")
                                                               )
                                                               (branch "CUT: f_0 = result_22 | !f_0.<created>@heapAfter_next = TRUE FALSE"
                                                                  (rule "replace_known_right" (formula "44") (term "0,0,1") (ifseqformula "43") (userinteraction))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "24"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1") (ifseqformula "24"))
                                                                  (rule "orRight" (formula "43"))
                                                                  (rule "notRight" (formula "44"))
                                                                  (rule "eqSymm" (formula "21") (term "0,1,0,1,0"))
                                                                  (rule "eqSymm" (formula "22") (term "0,1,0,1,0"))
                                                                  (rule "eqSymm" (formula "22") (term "1,1,0,1,0"))
                                                                  (rule "eqSymm" (formula "30"))
                                                                  (rule "eqSymm" (formula "29"))
                                                                  (rule "eqSymm" (formula "21") (term "1,1,0,1,0"))
                                                                  (rule "eqSymm" (formula "18"))
                                                                  (rule "eqSymm" (formula "44"))
                                                                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "42"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "40"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "43"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "17"))
                                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "17")) (ifInst ""  (formula "20")))
                                                                  (rule "closeTrue" (formula "45"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "1 < it.to_see.length FALSE"
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0,0,0") (ifseqformula "29"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0,0") (ifseqformula "20"))
                                                         (rule "castDel" (formula "39") (term "2,1,0,0,0,1,0"))
                                                         (rule "eqSymm" (formula "25"))
                                                         (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "24"))
                                                         (rule "eqSymm" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                                         (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                                                         (rule "replace_known_left" (formula "39") (term "0,0,1,0,0,0,1,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "36"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "polySimp_elimSub" (formula "39") (term "1,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "1,1,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "1,0,1,0,0,0,1,0"))
                                                         (rule "castedGetAny" (formula "25") (term "0"))
                                                         (rule "castedGetAny" (formula "16") (term "1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "16") (term "0,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltRight" (formula "35"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "6"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "14"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "mul_literals" (formula "6") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "SMTRule")
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "SMTRule")
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "36"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "36"))
                                                (branch "Case 1"
                                                   (rule "wellFormedAnonEQ" (formula "36") (ifseqformula "27"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                                   (rule "wellFormedAnonEQ" (formula "36") (term "0") (ifseqformula "18"))
                                                   (rule "eqSymm" (formula "22"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                                                   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "5")) (ifInst ""  (formula "17")))
                                                   (rule "closeTrue" (formula "36"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "SMTRule")
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "SMTRule")
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "36"))
                                          (branch "Case 1"
                                              (builtin "SMTRule")
                                          )
                                          (branch "Case 2"
                                              (builtin "SMTRule")
                                          )
                                       )
                                    )
                                    (branch "CUT: it.seen@heapAfter_use = it.seen@heapAfter_next FALSE"
                                       (rule "hide_right" (formula "36") (userinteraction))
                                       (rule "selectOfAnonEQ" (formula "32") (term "0") (ifseqformula "26") (userinteraction))
                                       (rule "selectOfAnonEQ" (formula "32") (term "1") (ifseqformula "17") (userinteraction))
                                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "35")) (ifInst ""  (formula "35")))
                                       (rule "ifthenelse_split" (formula "32") (term "0") (userinteraction))
                                       (branch " (it, LinkedListIterator::$seen) in result_22.footprint @heapAfter_next | !it.<created>@heapAfter_next = TRUE TRUE"
                                          (rule "JML_represents_clause_for_FileReader_footprint" (formula "1") (term "2,0") (userinteraction))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1") (ifseqformula "18"))
                                          (rule "elementOfUnion" (formula "1") (term "0"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "32"))
                                          (rule "ifthenelse_split" (formula "34") (term "1") (userinteraction))
                                          (branch " (it, LinkedListIterator::$seen) in it.footprint | !it.<created> = TRUE TRUE"
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                             (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "32")))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                          (branch " (it, LinkedListIterator::$seen) in it.footprint | !it.<created> = TRUE FALSE"
                                             (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "34") (term "2,0") (userinteraction))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                                             (rule "orRight" (formula "34"))
                                             (rule "notRight" (formula "35"))
                                             (rule "close" (formula "33") (ifseqformula "1"))
                                          )
                                       )
                                       (branch " (it, LinkedListIterator::$seen) in result_22.footprint @heapAfter_next | !it.<created>@heapAfter_next = TRUE FALSE"
                                          (rule "ifthenelse_split" (formula "33") (term "1") (userinteraction))
                                          (branch " (it, LinkedListIterator::$seen) in it.footprint | !it.<created> = TRUE TRUE"
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1") (ifseqformula "18"))
                                             (rule "orRight" (formula "33"))
                                             (rule "notRight" (formula "34"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "23") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "3"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                             (rule "applyEq" (formula "24") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "34") (inst "iv=iv"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                                             (rule "pullOutSelect" (formula "2") (term "1") (inst "selectSK=LinkedListIterator_to_see_0"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "2"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "8")))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                             (rule "replaceKnownSelect_taclet011010101200000_2" (formula "3") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "19"))
                                             (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "23"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "eqSymm" (formula "3") (term "1"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=FileReader_state_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "19"))
                                             (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "applyEq" (formula "30") (term "1") (ifseqformula "31"))
                                             (rule "ifEqualsInteger" (formula "30"))
                                             (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=LinkedListIterator_list_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "39")) (ifInst ""  (formula "8")))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "25"))
                                             (rule "hideAuxiliaryEq" (formula "25"))
                                             (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=LinkedListIterator_seen_0"))
                                             (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "36") (term "0,0,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "22"))
                                             (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
                                             (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
                                             (rule "applyEqReverse" (formula "36") (term "0,0,1,0,1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "closeTrue" (formula "36"))
                                          )
                                          (branch " (it, LinkedListIterator::$seen) in it.footprint | !it.<created> = TRUE FALSE"
                                             (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "33") (term "2,0") (userinteraction))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1") (ifseqformula "17"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "32"))
                                             (rule "notRight" (formula "35"))
                                             (rule "notRight" (formula "34"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "0,1,0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "39")))
                                             (rule "true_left" (formula "8"))
                                             (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "castedGetAny" (formula "22") (term "0"))
                                             (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "3"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "34") (inst "iv=iv"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                                             (rule "elementOfUnion" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "elementOfSingleton" (formula "34"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "false_right" (formula "34"))
                                             (rule "elementOfUnion" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "elementOfSingleton" (formula "34"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "closeTrue" (formula "34"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: it.to_see@heapAfter_use = it.to_see@heapAfter_next FALSE"
                                    (rule "hide_right" (formula "35") (userinteraction))
                                    (rule "selectOfAnonEQ" (formula "31") (term "0") (ifseqformula "25") (userinteraction))
                                    (rule "selectOfAnonEQ" (formula "31") (term "1") (ifseqformula "16") (userinteraction))
                                    (rule "ifthenelse_split" (formula "31") (term "1") (userinteraction))
                                    (branch " (it, LinkedListIterator::$to_see) in it.footprint & ! LinkedListIterator::$to_see = java.lang.Object::<created> | (it, LinkedListIterator::$to_see) in freshLocs(heap) TRUE"
                                       (rule "ifthenelse_split" (formula "32") (term "0") (userinteraction))
                                       (branch " (it, LinkedListIterator::$to_see) in result_22.footprint @heapAfter_next & ! LinkedListIterator::$to_see = java.lang.Object::<created> | (it, LinkedListIterator::$to_see) in freshLocs(heapAfter_next) TRUE"
                                          (rule "JML_represents_clause_for_FileReader_footprint" (formula "1") (term "2,0,0") (userinteraction))
                                          (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "2") (term "2,0,0") (userinteraction))
                                          (rule "elementOfUnion" (formula "1") (term "0,0") (userinteraction))
                                          (rule "elementOfUnion" (formula "2") (term "0,0") (userinteraction))
                                          (rule "elementOfUnion" (formula "2") (term "0,0,0") (userinteraction))
                                          (rule "elementOfUnion" (formula "2") (term "0,0,0,0") (userinteraction))
                                          (rule "elementOfUnion" (formula "2") (term "0,0,0,0,0") (userinteraction))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1") (ifseqformula "18"))
                                          (rule "eqSymm" (formula "23"))
                                          (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                                          (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "castedGetAny" (formula "23") (term "0"))
                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "2") (term "1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "2"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                          (rule "elementOfSingleton" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch " (it, LinkedListIterator::$to_see) in result_22.footprint @heapAfter_next & ! LinkedListIterator::$to_see = java.lang.Object::<created> | (it, LinkedListIterator::$to_see) in freshLocs(heapAfter_next) FALSE"
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "21") (userinteraction))
                                          (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "21") (userinteraction))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")))
                                          (rule "orRight" (formula "32") (userinteraction))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0") (ifseqformula "17"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                                          (rule "notRight" (formula "33"))
                                          (rule "eqSymm" (formula "15") (term "0,1,0,1,0"))
                                          (rule "eqSymm" (formula "23"))
                                          (rule "eqSymm" (formula "15") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                                          (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "22") (term "0"))
                                          (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "2"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                                          (rule "applyEq" (formula "23") (term "1") (ifseqformula "10"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv"))
                                          (rule "lenOfSeqSubEQ" (formula "33") (term "1,1,0,0,1") (ifseqformula "21"))
                                          (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "33") (term "1,1,1,1,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0,0,1"))
                                          (rule "lenOfSeqSubEQ" (formula "33") (term "0,0") (ifseqformula "21"))
                                          (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "33") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1,1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,1,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0,0,1,1,1,0,0,1"))
                                          (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=LinkedListIterator_seen_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "37")) (ifInst ""  (formula "6")))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
                                          (rule "hideAuxiliaryEq" (formula "21"))
                                          (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=LinkedListIterator_list_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "37")) (ifInst ""  (formula "6")))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=FileReader_state_0"))
                                          (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "17"))
                                          (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "30"))
                                          (rule "ifEqualsInteger" (formula "29"))
                                          (rule "pullOutSelect" (formula "21") (term "1") (inst "selectSK=LinkedListIterator_to_see_0"))
                                          (rule "applyEq" (formula "35") (term "0,0,1,0,1") (ifseqformula "21"))
                                          (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
                                          (rule "applyEqReverse" (formula "35") (term "0,0,1,0,1") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
                                          (rule "hideAuxiliaryEq" (formula "21"))
                                          (rule "lenOfSeqSubEQ" (formula "34") (term "1") (ifseqformula "21"))
                                          (rule "eqSymm" (formula "34"))
                                          (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                          (rule "mul_literals" (formula "34") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                    )
                                    (branch " (it, LinkedListIterator::$to_see) in it.footprint & ! LinkedListIterator::$to_see = java.lang.Object::<created> | (it, LinkedListIterator::$to_see) in freshLocs(heap) FALSE"
                                       (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "31") (term "2,0,0") (userinteraction))
                                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "35")))
                                       (rule "orRight" (formula "31") (userinteraction))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "36")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0,0") (ifseqformula "16"))
                                       (rule "notRight" (formula "32"))
                                       (rule "eqSymm" (formula "21"))
                                       (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                                       (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "36"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "21") (term "0"))
                                       (rule "castedGetAny" (formula "12") (term "1,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "12") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "2"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                                       (rule "applyEq" (formula "22") (term "1") (ifseqformula "9"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "elementOfSingleton" (formula "32"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "close" (formula "31") (ifseqformula "8") (userinteraction))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "closeTrue" (formula "30") (userinteraction))
                     )
                  )
               )
            )
            (branch "Exceptional Post (use)"
                (builtin "One Step Simplification" (formula "25"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "16"))
               (rule "andLeft" (formula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "16"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "26"))
               (rule "close" (formula "29") (ifseqformula "28"))
            )
            (branch "Pre (use)"
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
               (rule "wellFormedAnonEQ" (formula "27") (term "0,1") (ifseqformula "16") (userinteraction))
               (rule "replace_known_left" (formula "27") (term "0,0,1") (ifseqformula "3") (userinteraction))
               (rule "replace_known_left" (formula "27") (term "1,0,1") (ifseqformula "15") (userinteraction))
                (builtin "One Step Simplification" (formula "27"))
               (rule "orLeft" (formula "18") (userinteraction))
               (branch "result_22 = null"
                  (rule "close" (formula "24") (ifseqformula "18"))
               )
               (branch "result_22.<created>@heapAfter_next = TRUE"
                  (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "18") (userinteraction))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "andRight" (formula "27") (userinteraction))
                  (branch "Case 1"
                     (rule "Class_invariant_axiom_for_FileReader" (formula "27") (userinteraction))
                     (rule "Class_invariant_axiom_for_FileReader" (formula "10") (term "1,1,0,1,0") (userinteraction))
                     (rule "selectOfAnonEQ" (formula "27") (term "0") (ifseqformula "16") (userinteraction))
                     (rule "ifthenelse_split" (formula "27") (term "0") (userinteraction))
                     (branch " (result_22, FileReader::$remaining) in it.footprint & ! FileReader::$remaining = java.lang.Object::<created> | (result_22, FileReader::$remaining) in freshLocs(heap) TRUE"
                        (rule "hide_right" (formula "28") (userinteraction))
                        (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "1") (term "2,0,0") (userinteraction))
                        (rule "elementOfUnion" (formula "1") (term "0,0") (userinteraction))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0") (userinteraction))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0") (userinteraction))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0") (userinteraction))
                        (rule "orLeft" (formula "1") (userinteraction))
                        (branch " ( (result_22, FileReader::$remaining) in {(it, LinkedListIterator::$list)} | (result_22, FileReader::$remaining) in {(it, LinkedListIterator::$curr)} | (result_22, FileReader::$remaining) in {(it, LinkedListIterator::$index)} | (result_22, FileReader::$remaining) in {(it, LinkedListIterator::$seen)} | (result_22, FileReader::$remaining) in {(it, LinkedListIterator::$to_see)}) & !FileReader::$remaining = java.lang.Object::<created>"
                           (rule "andLeft" (formula "1") (userinteraction))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (ifseqformula "18"))
                           (rule "true_left" (formula "2"))
                           (rule "eqSymm" (formula "14") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "14") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "22"))
                           (rule "eqSymm" (formula "21"))
                           (rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "22") (term "0"))
                           (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0"))
                           (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "2"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "(result_22, FileReader::$remaining) in freshLocs(heap)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "notLeft" (formula "1") (userinteraction))
                           (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "21") (userinteraction))
                            (builtin "SMTRule")
                        )
                     )
                     (branch " (result_22, FileReader::$remaining) in it.footprint & ! FileReader::$remaining = java.lang.Object::<created> | (result_22, FileReader::$remaining) in freshLocs(heap) FALSE"
                        (rule "orRight" (formula "27") (userinteraction))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "27") (term "2") (userinteraction))
                        (rule "hide_right" (formula "27") (userinteraction))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "24")))
                        (rule "hide_right" (formula "27") (userinteraction))
                        (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "21") (userinteraction))
                        (rule "Class_invariant_axiom_for_FileReader" (formula "11") (term "1,1,0,1,0") (userinteraction))
                         (builtin "SMTRule")
                     )
                  )
                  (branch "Case 2"
                     (rule "selectOfAnonEQ" (formula "27") (term "0") (ifseqformula "16") (userinteraction))
                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "24")))
                     (rule "ifthenelse_split" (formula "27") (term "0") (userinteraction))
                     (branch " (result_22, FileReader::$state) in it.footprint | !result_22.<created> = TRUE TRUE"
                        (rule "JML_represents_clause_for_LinkedListIterator_footprint" (formula "1") (term "2,0") (userinteraction))
                        (rule "elementOfUnion" (formula "1") (term "0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0"))
                        (rule "eqSymm" (formula "1") (term "1,0"))
                        (rule "orLeft" (formula "1") (userinteraction))
                        (branch " result_22 = it & LinkedListIterator::$curr = FileReader::$state"
                           (rule "andLeft" (formula "1") (userinteraction))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "!result_22.<created> = TRUE"
                           (rule "notLeft" (formula "1") (userinteraction))
                           (rule "hide_right" (formula "28") (userinteraction))
                           (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "21") (userinteraction))
                            (builtin "SMTRule")
                        )
                     )
                     (branch " (result_22, FileReader::$state) in it.footprint | !result_22.<created> = TRUE FALSE"
                         (builtin "SMTRule")
                     )
                  )
               )
            )
         )
         (branch "it.to_see.length > 0 FALSE"
            (rule "hide_right" (formula "20") (userinteraction))
             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
            (rule "closeFalse" (formula "14"))
         )
      )
      (branch "Exceptional Post (next)"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "andLeft" (formula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "17"))
         (rule "close" (formula "20") (ifseqformula "19"))
      )
      (branch "Pre (next)"
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "6")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "12") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "11") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "12") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "14"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "15"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "eqSymm" (formula "14"))
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
         (rule "closeFalse" (formula "14"))
      )
      (branch "Null reference (_it = null)"
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
         (rule "closeTrue" (formula "17"))
      )
   )
   (branch "result_21 = TRUE FALSE"
      (rule "methodCallEmpty" (formula "17") (term "1") (userinteraction))
      (rule "tryEmpty" (formula "17") (term "1") (userinteraction))
      (rule "emptyModality" (formula "17") (term "1") (userinteraction))
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "5")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "10")))
      (rule "cut_direct" (formula "13") (term "0,1") (userinteraction))
      (branch "CUT: it.to_see.length > 0 TRUE"
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "14") (userinteraction))
      )
      (branch "CUT: it.to_see.length > 0 FALSE"
         (rule "equalityToSeqGetAndSeqLen" (formula "18") (inst "iv=iv") (userinteraction))
         (rule "andRight" (formula "18") (userinteraction))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "18"))
            (rule "cut" (inst "cutFormula=(  gt(seqLen(Seq::select(heap,
                         it,
                         LinkedListIterator::$to_see)),
      Z(0(#)))<<origin(\"User_Interaction @ node 1141 (cut)\",\"[]\")>>
 | (  seqLen(Seq::select(heap,
                         it,
                         LinkedListIterator::$to_see))
    = Z(0(#)))<<origin(\"User_Interaction @ node 1141 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 1141 (cut)\",\"[]\")>>") (userinteraction))
            (branch "CUT: it.to_see.length > 0 | it.to_see.length = 0 TRUE"
               (rule "orLeft" (formula "1") (userinteraction))
               (branch "it.to_see.length > 0"
                  (rule "close" (formula "15") (ifseqformula "1") (userinteraction))
               )
               (branch "it.to_see.length = 0"
                  (rule "close" (formula "19") (ifseqformula "1") (userinteraction))
               )
            )
            (branch "CUT: it.to_see.length > 0 | it.to_see.length = 0 FALSE"
               (rule "hide_right" (formula "15") (userinteraction))
               (rule "hide_right" (formula "15") (userinteraction))
               (rule "hide_right" (formula "15") (userinteraction))
               (rule "hide_right" (formula "15") (userinteraction))
               (rule "hide_right" (formula "15") (userinteraction))
                (builtin "SMTRule")
            )
         )
         (branch "Case 2"
             (builtin "SMTRule")
         )
      )
   )
)
(branch "Exceptional Post (hasNext)"
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "5")))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "12"))
   (rule "notLeft" (formula "12"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (hasNext)"
    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
   (rule "eqSymm" (formula "10") (term "1,1,0,1,0"))
   (rule "eqSymm" (formula "11") (term "0,1,0,1,0"))
   (rule "eqSymm" (formula "10") (term "0,1,0,1,0"))
   (rule "eqSymm" (formula "11") (term "1,1,0,1,0"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "12"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")))
   (rule "closeFalse" (formula "3"))
)
(branch "Null reference (_it = null)"
    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
   (rule "closeTrue" (formula "14"))
)
)
}
